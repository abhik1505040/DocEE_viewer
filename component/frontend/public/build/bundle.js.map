{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/event-target-shim/dist/event-target-shim.mjs","../../node_modules/flatbuffers/js/flatbuffers.mjs","../../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../../node_modules/apache-arrow/util/utf8.mjs","../../node_modules/apache-arrow/io/interfaces.mjs","../../node_modules/apache-arrow/util/compat.mjs","../../node_modules/apache-arrow/util/buffer.mjs","../../node_modules/apache-arrow/io/adapters.mjs","../../node_modules/apache-arrow/vector.mjs","../../node_modules/apache-arrow/fb/Schema.mjs","../../node_modules/apache-arrow/fb/Message.mjs","../../node_modules/apache-arrow/enum.mjs","../../node_modules/apache-arrow/util/bit.mjs","../../node_modules/apache-arrow/visitor.mjs","../../node_modules/apache-arrow/visitor/typecomparator.mjs","../../node_modules/apache-arrow/type.mjs","../../node_modules/apache-arrow/data.mjs","../../node_modules/apache-arrow/util/pretty.mjs","../../node_modules/apache-arrow/builder/valid.mjs","../../node_modules/apache-arrow/builder/buffer.mjs","../../node_modules/apache-arrow/builder.mjs","../../node_modules/apache-arrow/builder/bool.mjs","../../node_modules/apache-arrow/builder/null.mjs","../../node_modules/apache-arrow/builder/date.mjs","../../node_modules/apache-arrow/builder/decimal.mjs","../../node_modules/apache-arrow/builder/dictionary.mjs","../../node_modules/apache-arrow/builder/fixedsizebinary.mjs","../../node_modules/apache-arrow/util/math.mjs","../../node_modules/apache-arrow/builder/float.mjs","../../node_modules/apache-arrow/util/bn.mjs","../../node_modules/apache-arrow/builder/int.mjs","../../node_modules/apache-arrow/builder/time.mjs","../../node_modules/apache-arrow/builder/timestamp.mjs","../../node_modules/apache-arrow/builder/interval.mjs","../../node_modules/apache-arrow/builder/binary.mjs","../../node_modules/apache-arrow/builder/utf8.mjs","../../node_modules/apache-arrow/builder/run.mjs","../../node_modules/apache-arrow/vector/row.mjs","../../node_modules/apache-arrow/util/vector.mjs","../../node_modules/apache-arrow/vector/chunked.mjs","../../node_modules/apache-arrow/column.mjs","../../node_modules/apache-arrow/util/args.mjs","../../node_modules/apache-arrow/schema.mjs","../../node_modules/apache-arrow/builder/list.mjs","../../node_modules/apache-arrow/builder/fixedsizelist.mjs","../../node_modules/apache-arrow/builder/map.mjs","../../node_modules/apache-arrow/builder/struct.mjs","../../node_modules/apache-arrow/builder/union.mjs","../../node_modules/apache-arrow/visitor/set.mjs","../../node_modules/apache-arrow/visitor/builderctor.mjs","../../node_modules/apache-arrow/fb/File.mjs","../../node_modules/apache-arrow/builder/index.mjs","../../node_modules/apache-arrow/ipc/metadata/file.mjs","../../node_modules/apache-arrow/io/stream.mjs","../../node_modules/apache-arrow/io/file.mjs","../../node_modules/apache-arrow/util/int.mjs","../../node_modules/apache-arrow/visitor/vectorloader.mjs","../../node_modules/apache-arrow/visitor/typeassembler.mjs","../../node_modules/apache-arrow/ipc/metadata/json.mjs","../../node_modules/apache-arrow/ipc/metadata/message.mjs","../../node_modules/apache-arrow/ipc/message.mjs","../../node_modules/apache-arrow/visitor/vectorassembler.mjs","../../node_modules/apache-arrow/ipc/writer.mjs","../../node_modules/apache-arrow/util/recordbatch.mjs","../../node_modules/apache-arrow/vector/base.mjs","../../node_modules/apache-arrow/vector/binary.mjs","../../node_modules/apache-arrow/vector/bool.mjs","../../node_modules/apache-arrow/vector/date.mjs","../../node_modules/apache-arrow/vector/decimal.mjs","../../node_modules/apache-arrow/vector/dictionary.mjs","../../node_modules/apache-arrow/vector/fixedsizebinary.mjs","../../node_modules/apache-arrow/vector/fixedsizelist.mjs","../../node_modules/apache-arrow/vector/float.mjs","../../node_modules/apache-arrow/vector/interval.mjs","../../node_modules/apache-arrow/vector/int.mjs","../../node_modules/apache-arrow/vector/list.mjs","../../node_modules/apache-arrow/vector/map.mjs","../../node_modules/apache-arrow/vector/null.mjs","../../node_modules/apache-arrow/vector/struct.mjs","../../node_modules/apache-arrow/vector/timestamp.mjs","../../node_modules/apache-arrow/vector/time.mjs","../../node_modules/apache-arrow/vector/union.mjs","../../node_modules/apache-arrow/vector/utf8.mjs","../../node_modules/apache-arrow/util/fn.mjs","../../node_modules/apache-arrow/visitor/get.mjs","../../node_modules/apache-arrow/visitor/indexof.mjs","../../node_modules/apache-arrow/visitor/iterator.mjs","../../node_modules/apache-arrow/visitor/toarray.mjs","../../node_modules/apache-arrow/visitor/bytewidth.mjs","../../node_modules/apache-arrow/visitor/vectorctor.mjs","../../node_modules/apache-arrow/vector/index.mjs","../../node_modules/apache-arrow/table.mjs","../../node_modules/apache-arrow/recordbatch.mjs","../../node_modules/apache-arrow/ipc/reader.mjs","../../node_modules/apache-arrow/io/whatwg/builder.mjs","../../node_modules/apache-arrow/compute/predicate.mjs","../../node_modules/apache-arrow/compute/dataframe.mjs","../../node_modules/apache-arrow/Arrow.dom.mjs","../../node_modules/apache-arrow/io/whatwg/iterable.mjs","../../node_modules/apache-arrow/io/whatwg/reader.mjs","../../node_modules/apache-arrow/io/whatwg/writer.mjs","../../src/streamlit/ArrowTable.ts","../../src/streamlit/streamlit.ts","../../src/streamlit/WithStreamlitConnection.svelte","../../src/components/MarkedWord.svelte","../../src/Annotator.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from './buffer';\nimport { TextDecoder as TextDecoderPolyfill, TextEncoder as TextEncoderPolyfill, } from 'text-encoding-utf-8';\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer) => decoder.decode(buffer);\n    }\n    return (input) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\n/** @ignore */\nexport const ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\n/** @ignore */\nexport class ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n/** @ignore */\nexport class AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    async cancel(reason) { await this.return(reason); }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return streamAdapters.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return streamAdapters.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    async throw(_) { await this.abort(_); return ITERATOR_DONE; }\n    async return(_) { await this.close(); return ITERATOR_DONE; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n\n//# sourceMappingURL=interfaces.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ReadableInterop } from '../io/interfaces';\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport const isObservable = (x) => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nexport const isIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nexport const isAsyncIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nexport const isArrowJSON = (x) => {\n    return isObject(x) && isObject(x['schema']);\n};\n/** @ignore */\nexport const isArrayLike = (x) => {\n    return isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nexport const isIteratorResult = (x) => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n/** @ignore */\nexport const isUnderlyingSink = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n/** @ignore */\nexport const isFileHandle = (x) => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nexport const isFSReadStream = (x) => {\n    return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n//# sourceMappingURL=compat.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nexport function memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n/** @ignore */\nexport function joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nexport function toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = isIteratorResult(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = encodeUtf8(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof ByteBuffer) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n/** @ignore */ export const toInt8Array = (input) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nexport function* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !isIterable(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n/** @ignore */ export const toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n    const wrap = async function* (x) { yield await x; };\n    const emit = async function* (source) {\n        yield* pump((function* (it) {\n            let r = null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n    const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n        : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n            : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                    : isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                        : !isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                            : source; // otherwise if AsyncIterable, use it\n    yield* pump((async function* (it) {\n        let r = null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport function rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n/** @ignore */\nexport function compareArrayLike(a, b) {\n    let i = 0, n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array, joinUint8Arrays, toUint8ArrayIterator, toUint8ArrayAsyncIterator } from '../util/buffer';\n/** @ignore */\nexport default {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n/** @ignore */\nasync function* fromAsyncIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream(source) {\n    let done = false, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield null);\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    }\n    finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.byobReader = null;\n        this.defaultReader = null;\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        }\n        catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n    async cancel(reason) {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => { }));\n        source && (source['locked'] && this.releaseLock());\n    }\n    async read(size) {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result));\n        return result;\n    }\n    getDefaultReader() {\n        if (this.byobReader) {\n            this.releaseLock();\n        }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.defaultReader);\n    }\n    getBYOBReader() {\n        if (this.defaultReader) {\n            this.releaseLock();\n        }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.byobReader);\n    }\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    async readFromBYOBReader(size) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n/** @ignore */\nasync function readInto(reader, buffer, offset, size) {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    let handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nasync function* fromNodeStream(stream) {\n    let events = [];\n    let event = 'error';\n    let done = false, err = null;\n    let cmd, size, bufferLength = 0;\n    let buffers = [], buffer;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield null);\n    // ignore stdin if it's a TTY\n    if (stream['isTTY']) {\n        return yield new Uint8Array(0);\n    }\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n        do {\n            events[2] = onEvent(stream, 'readable');\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') {\n                break;\n            }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                }\n                else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n    function cleanup(events, err) {\n        buffer = buffers = null;\n        return new Promise(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = stream['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            }\n            catch (e) {\n                err = e || err;\n            }\n            finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=adapters.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport class AbstractVector {\n}\nexport { AbstractVector as Vector };\n\n//# sourceMappingURL=vector.mjs.map\n","/* tslint:disable:class-name */\n/**\n * @enum {number}\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MetadataVersion;\n                (function (MetadataVersion) {\n                    /**\n                     * 0.1.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n                    /**\n                     * 0.2.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n                    /**\n                     * 0.3.0 -> 0.7.1\n                     */\n                    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n                    /**\n                     * >= 0.8.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n                })(MetadataVersion = flatbuf.MetadataVersion || (flatbuf.MetadataVersion = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let UnionMode;\n                (function (UnionMode) {\n                    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n                    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n                })(UnionMode = flatbuf.UnionMode || (flatbuf.UnionMode = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Precision;\n                (function (Precision) {\n                    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n                    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n                    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                })(Precision = flatbuf.Precision || (flatbuf.Precision = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let DateUnit;\n                (function (DateUnit) {\n                    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n                    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                })(DateUnit = flatbuf.DateUnit || (flatbuf.DateUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let TimeUnit;\n                (function (TimeUnit) {\n                    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n                    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n                    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n                })(TimeUnit = flatbuf.TimeUnit || (flatbuf.TimeUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let IntervalUnit;\n                (function (IntervalUnit) {\n                    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n                    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n                })(IntervalUnit = flatbuf.IntervalUnit || (flatbuf.IntervalUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Type;\n                (function (Type) {\n                    Type[Type[\"NONE\"] = 0] = \"NONE\";\n                    Type[Type[\"Null\"] = 1] = \"Null\";\n                    Type[Type[\"Int\"] = 2] = \"Int\";\n                    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n                    Type[Type[\"Binary\"] = 4] = \"Binary\";\n                    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n                    Type[Type[\"Bool\"] = 6] = \"Bool\";\n                    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n                    Type[Type[\"Date\"] = 8] = \"Date\";\n                    Type[Type[\"Time\"] = 9] = \"Time\";\n                    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n                    Type[Type[\"Interval\"] = 11] = \"Interval\";\n                    Type[Type[\"List\"] = 12] = \"List\";\n                    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n                    Type[Type[\"Union\"] = 14] = \"Union\";\n                    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n                    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n                    Type[Type[\"Map\"] = 17] = \"Map\";\n                    Type[Type[\"Duration\"] = 18] = \"Duration\";\n                    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n                    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n                    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n                })(Type = flatbuf.Type || (flatbuf.Type = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Endianness;\n                (function (Endianness) {\n                    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n                    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n                })(Endianness = flatbuf.Endianness || (flatbuf.Endianness = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Null {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Null\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Null= obj\n                     * @returns Null\n                     */\n                    static getRootAsNull(bb, obj) {\n                        return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startNull(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endNull(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createNull(builder) {\n                        Null.startNull(builder);\n                        return Null.endNull(builder);\n                    }\n                }\n                flatbuf.Null = Null;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Struct_ {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Struct_\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Struct_= obj\n                     * @returns Struct_\n                     */\n                    static getRootAsStruct_(bb, obj) {\n                        return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startStruct_(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endStruct_(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createStruct_(builder) {\n                        Struct_.startStruct_(builder);\n                        return Struct_.endStruct_(builder);\n                    }\n                }\n                flatbuf.Struct_ = Struct_;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class List {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns List\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param List= obj\n                     * @returns List\n                     */\n                    static getRootAsList(bb, obj) {\n                        return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createList(builder) {\n                        List.startList(builder);\n                        return List.endList(builder);\n                    }\n                }\n                flatbuf.List = List;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeList= obj\n                     * @returns LargeList\n                     */\n                    static getRootAsLargeList(bb, obj) {\n                        return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeList(builder) {\n                        LargeList.startLargeList(builder);\n                        return LargeList.endLargeList(builder);\n                    }\n                }\n                flatbuf.LargeList = LargeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeList= obj\n                     * @returns FixedSizeList\n                     */\n                    static getRootAsFixedSizeList(bb, obj) {\n                        return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of list items per value\n                     *\n                     * @returns number\n                     */\n                    listSize() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeList(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number listSize\n                     */\n                    static addListSize(builder, listSize) {\n                        builder.addFieldInt32(0, listSize, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeList(builder, listSize) {\n                        FixedSizeList.startFixedSizeList(builder);\n                        FixedSizeList.addListSize(builder, listSize);\n                        return FixedSizeList.endFixedSizeList(builder);\n                    }\n                }\n                flatbuf.FixedSizeList = FixedSizeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Map {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Map\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Map= obj\n                     * @returns Map\n                     */\n                    static getRootAsMap(bb, obj) {\n                        return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Set to true if the keys within each value are sorted\n                     *\n                     * @returns boolean\n                     */\n                    keysSorted() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMap(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean keysSorted\n                     */\n                    static addKeysSorted(builder, keysSorted) {\n                        builder.addFieldInt8(0, +keysSorted, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMap(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createMap(builder, keysSorted) {\n                        Map.startMap(builder);\n                        Map.addKeysSorted(builder, keysSorted);\n                        return Map.endMap(builder);\n                    }\n                }\n                flatbuf.Map = Map;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Union {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Union\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Union= obj\n                     * @returns Union\n                     */\n                    static getRootAsUnion(bb, obj) {\n                        return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.UnionMode\n                     */\n                    mode() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n                    }\n                    /**\n                     * @param number index\n                     * @returns number\n                     */\n                    typeIds(index) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    typeIdsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns Int32Array\n                     */\n                    typeIdsArray() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUnion(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.UnionMode mode\n                     */\n                    static addMode(builder, mode) {\n                        builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeIdsOffset\n                     */\n                    static addTypeIds(builder, typeIdsOffset) {\n                        builder.addFieldOffset(1, typeIdsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<number> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createTypeIdsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addInt32(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startTypeIdsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUnion(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUnion(builder, mode, typeIdsOffset) {\n                        Union.startUnion(builder);\n                        Union.addMode(builder, mode);\n                        Union.addTypeIds(builder, typeIdsOffset);\n                        return Union.endUnion(builder);\n                    }\n                }\n                flatbuf.Union = Union;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Int {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Int\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Int= obj\n                     * @returns Int\n                     */\n                    static getRootAsInt(bb, obj) {\n                        return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns boolean\n                     */\n                    isSigned() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInt(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(0, bitWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isSigned\n                     */\n                    static addIsSigned(builder, isSigned) {\n                        builder.addFieldInt8(1, +isSigned, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInt(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInt(builder, bitWidth, isSigned) {\n                        Int.startInt(builder);\n                        Int.addBitWidth(builder, bitWidth);\n                        Int.addIsSigned(builder, isSigned);\n                        return Int.endInt(builder);\n                    }\n                }\n                flatbuf.Int = Int;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FloatingPoint {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FloatingPoint\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FloatingPoint= obj\n                     * @returns FloatingPoint\n                     */\n                    static getRootAsFloatingPoint(bb, obj) {\n                        return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Precision\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFloatingPoint(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Precision precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFloatingPoint(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFloatingPoint(builder, precision) {\n                        FloatingPoint.startFloatingPoint(builder);\n                        FloatingPoint.addPrecision(builder, precision);\n                        return FloatingPoint.endFloatingPoint(builder);\n                    }\n                }\n                flatbuf.FloatingPoint = FloatingPoint;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Utf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Utf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Utf8= obj\n                     * @returns Utf8\n                     */\n                    static getRootAsUtf8(bb, obj) {\n                        return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUtf8(builder) {\n                        Utf8.startUtf8(builder);\n                        return Utf8.endUtf8(builder);\n                    }\n                }\n                flatbuf.Utf8 = Utf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Opaque binary data\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Binary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Binary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Binary= obj\n                     * @returns Binary\n                     */\n                    static getRootAsBinary(bb, obj) {\n                        return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBinary(builder) {\n                        Binary.startBinary(builder);\n                        return Binary.endBinary(builder);\n                    }\n                }\n                flatbuf.Binary = Binary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeUtf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeUtf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeUtf8= obj\n                     * @returns LargeUtf8\n                     */\n                    static getRootAsLargeUtf8(bb, obj) {\n                        return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeUtf8(builder) {\n                        LargeUtf8.startLargeUtf8(builder);\n                        return LargeUtf8.endLargeUtf8(builder);\n                    }\n                }\n                flatbuf.LargeUtf8 = LargeUtf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeBinary= obj\n                     * @returns LargeBinary\n                     */\n                    static getRootAsLargeBinary(bb, obj) {\n                        return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeBinary(builder) {\n                        LargeBinary.startLargeBinary(builder);\n                        return LargeBinary.endLargeBinary(builder);\n                    }\n                }\n                flatbuf.LargeBinary = LargeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeBinary= obj\n                     * @returns FixedSizeBinary\n                     */\n                    static getRootAsFixedSizeBinary(bb, obj) {\n                        return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of bytes per value\n                     *\n                     * @returns number\n                     */\n                    byteWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeBinary(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number byteWidth\n                     */\n                    static addByteWidth(builder, byteWidth) {\n                        builder.addFieldInt32(0, byteWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeBinary(builder, byteWidth) {\n                        FixedSizeBinary.startFixedSizeBinary(builder);\n                        FixedSizeBinary.addByteWidth(builder, byteWidth);\n                        return FixedSizeBinary.endFixedSizeBinary(builder);\n                    }\n                }\n                flatbuf.FixedSizeBinary = FixedSizeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Bool {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Bool\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Bool= obj\n                     * @returns Bool\n                     */\n                    static getRootAsBool(bb, obj) {\n                        return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBool(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBool(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBool(builder) {\n                        Bool.startBool(builder);\n                        return Bool.endBool(builder);\n                    }\n                }\n                flatbuf.Bool = Bool;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Decimal {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Decimal\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Decimal= obj\n                     * @returns Decimal\n                     */\n                    static getRootAsDecimal(bb, obj) {\n                        return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Total number of decimal digits\n                     *\n                     * @returns number\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Number of digits after the decimal point \".\"\n                     *\n                     * @returns number\n                     */\n                    scale() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDecimal(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt32(0, precision, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number scale\n                     */\n                    static addScale(builder, scale) {\n                        builder.addFieldInt32(1, scale, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDecimal(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDecimal(builder, precision, scale) {\n                        Decimal.startDecimal(builder);\n                        Decimal.addPrecision(builder, precision);\n                        Decimal.addScale(builder, scale);\n                        return Decimal.endDecimal(builder);\n                    }\n                }\n                flatbuf.Decimal = Decimal;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Date {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Date\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Date= obj\n                     * @returns Date\n                     */\n                    static getRootAsDate(bb, obj) {\n                        return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.DateUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDate(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.DateUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDate(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDate(builder, unit) {\n                        Date.startDate(builder);\n                        Date.addUnit(builder, unit);\n                        return Date.endDate(builder);\n                    }\n                }\n                flatbuf.Date = Date;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Time {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Time\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Time= obj\n                     * @returns Time\n                     */\n                    static getRootAsTime(bb, obj) {\n                        return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTime(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(1, bitWidth, 32);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTime(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTime(builder, unit, bitWidth) {\n                        Time.startTime(builder);\n                        Time.addUnit(builder, unit);\n                        Time.addBitWidth(builder, bitWidth);\n                        return Time.endTime(builder);\n                    }\n                }\n                flatbuf.Time = Time;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Timestamp {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Timestamp\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Timestamp= obj\n                     * @returns Timestamp\n                     */\n                    static getRootAsTimestamp(bb, obj) {\n                        return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n                    }\n                    timezone(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTimestamp(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset timezoneOffset\n                     */\n                    static addTimezone(builder, timezoneOffset) {\n                        builder.addFieldOffset(1, timezoneOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTimestamp(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTimestamp(builder, unit, timezoneOffset) {\n                        Timestamp.startTimestamp(builder);\n                        Timestamp.addUnit(builder, unit);\n                        Timestamp.addTimezone(builder, timezoneOffset);\n                        return Timestamp.endTimestamp(builder);\n                    }\n                }\n                flatbuf.Timestamp = Timestamp;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Interval {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Interval\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Interval= obj\n                     * @returns Interval\n                     */\n                    static getRootAsInterval(bb, obj) {\n                        return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.IntervalUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInterval(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.IntervalUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInterval(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInterval(builder, unit) {\n                        Interval.startInterval(builder);\n                        Interval.addUnit(builder, unit);\n                        return Interval.endInterval(builder);\n                    }\n                }\n                flatbuf.Interval = Interval;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Duration {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Duration\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Duration= obj\n                     * @returns Duration\n                     */\n                    static getRootAsDuration(bb, obj) {\n                        return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDuration(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDuration(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDuration(builder, unit) {\n                        Duration.startDuration(builder);\n                        Duration.addUnit(builder, unit);\n                        return Duration.endDuration(builder);\n                    }\n                }\n                flatbuf.Duration = Duration;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class KeyValue {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns KeyValue\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param KeyValue= obj\n                     * @returns KeyValue\n                     */\n                    static getRootAsKeyValue(bb, obj) {\n                        return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    key(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    value(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startKeyValue(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset keyOffset\n                     */\n                    static addKey(builder, keyOffset) {\n                        builder.addFieldOffset(0, keyOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset valueOffset\n                     */\n                    static addValue(builder, valueOffset) {\n                        builder.addFieldOffset(1, valueOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endKeyValue(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createKeyValue(builder, keyOffset, valueOffset) {\n                        KeyValue.startKeyValue(builder);\n                        KeyValue.addKey(builder, keyOffset);\n                        KeyValue.addValue(builder, valueOffset);\n                        return KeyValue.endKeyValue(builder);\n                    }\n                }\n                flatbuf.KeyValue = KeyValue;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryEncoding {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryEncoding\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryEncoding= obj\n                     * @returns DictionaryEncoding\n                     */\n                    static getRootAsDictionaryEncoding(bb, obj) {\n                        return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * The known dictionary id in the application where this data is used. In\n                     * the file or streaming formats, the dictionary ids are found in the\n                     * DictionaryBatch messages\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * The dictionary indices are constrained to be positive integers. If this\n                     * field is null, the indices must be signed int32\n                     *\n                     * @param org.apache.arrow.flatbuf.Int= obj\n                     * @returns org.apache.arrow.flatbuf.Int|null\n                     */\n                    indexType(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * By default, dictionaries are not ordered, or the order does not have\n                     * semantic meaning. In some statistical, applications, dictionary-encoding\n                     * is used to represent ordered categorical data, and we provide a way to\n                     * preserve that metadata here\n                     *\n                     * @returns boolean\n                     */\n                    isOrdered() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryEncoding(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset indexTypeOffset\n                     */\n                    static addIndexType(builder, indexTypeOffset) {\n                        builder.addFieldOffset(1, indexTypeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isOrdered\n                     */\n                    static addIsOrdered(builder, isOrdered) {\n                        builder.addFieldInt8(2, +isOrdered, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryEncoding(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryEncoding(builder, id, indexTypeOffset, isOrdered) {\n                        DictionaryEncoding.startDictionaryEncoding(builder);\n                        DictionaryEncoding.addId(builder, id);\n                        DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n                        DictionaryEncoding.addIsOrdered(builder, isOrdered);\n                        return DictionaryEncoding.endDictionaryEncoding(builder);\n                    }\n                }\n                flatbuf.DictionaryEncoding = DictionaryEncoding;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Field {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Field\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Field= obj\n                     * @returns Field\n                     */\n                    static getRootAsField(bb, obj) {\n                        return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    name(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * Whether or not this field can contain nulls. Should be true in general.\n                     *\n                     * @returns boolean\n                     */\n                    nullable() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Type\n                     */\n                    typeType() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n                    }\n                    /**\n                     * This is the type of the decoded value if the field is dictionary encoded.\n                     *\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    type(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * Present only if the field is dictionary encoded.\n                     *\n                     * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n                     * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n                     */\n                    dictionary(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * children apply only to nested data types like Struct, List and Union. For\n                     * primitive types children will have length 0.\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    children(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    childrenLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * User-defined metadata\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startField(builder) {\n                        builder.startObject(7);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nameOffset\n                     */\n                    static addName(builder, nameOffset) {\n                        builder.addFieldOffset(0, nameOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean nullable\n                     */\n                    static addNullable(builder, nullable) {\n                        builder.addFieldInt8(1, +nullable, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Type typeType\n                     */\n                    static addTypeType(builder, typeType) {\n                        builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeOffset\n                     */\n                    static addType(builder, typeOffset) {\n                        builder.addFieldOffset(3, typeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionaryOffset\n                     */\n                    static addDictionary(builder, dictionaryOffset) {\n                        builder.addFieldOffset(4, dictionaryOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset childrenOffset\n                     */\n                    static addChildren(builder, childrenOffset) {\n                        builder.addFieldOffset(5, childrenOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createChildrenVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startChildrenVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(6, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endField(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createField(builder, nameOffset, nullable, typeType, typeOffset, dictionaryOffset, childrenOffset, customMetadataOffset) {\n                        Field.startField(builder);\n                        Field.addName(builder, nameOffset);\n                        Field.addNullable(builder, nullable);\n                        Field.addTypeType(builder, typeType);\n                        Field.addType(builder, typeOffset);\n                        Field.addDictionary(builder, dictionaryOffset);\n                        Field.addChildren(builder, childrenOffset);\n                        Field.addCustomMetadata(builder, customMetadataOffset);\n                        return Field.endField(builder);\n                    }\n                }\n                flatbuf.Field = Field;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Buffer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Buffer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The relative offset into the shared memory page where the bytes for this\n                     * buffer starts\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The absolute length (in bytes) of the memory buffer. The memory is found\n                     * from offset (inclusive) to offset + length (non-inclusive).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param flatbuffers.Long length\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBuffer(builder, offset, length) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(length);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Buffer = Buffer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Schema {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Schema\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Schema= obj\n                     * @returns Schema\n                     */\n                    static getRootAsSchema(bb, obj) {\n                        return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * endianness of the buffer\n                     * it is Little Endian by default\n                     * if endianness doesn't match the underlying system then the vectors need to be converted\n                     *\n                     * @returns org.apache.arrow.flatbuf.Endianness\n                     */\n                    endianness() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    fields(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    fieldsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startSchema(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Endianness endianness\n                     */\n                    static addEndianness(builder, endianness) {\n                        builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset fieldsOffset\n                     */\n                    static addFields(builder, fieldsOffset) {\n                        builder.addFieldOffset(1, fieldsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startFieldsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(2, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endSchema(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishSchemaBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset) {\n                        Schema.startSchema(builder);\n                        Schema.addEndianness(builder, endianness);\n                        Schema.addFields(builder, fieldsOffset);\n                        Schema.addCustomMetadata(builder, customMetadataOffset);\n                        return Schema.endSchema(builder);\n                    }\n                }\n                flatbuf.Schema = Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Schema.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                flatbuf.Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MessageHeader;\n                (function (MessageHeader) {\n                    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n                    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n                    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n                    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n                    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n                    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n                })(MessageHeader = flatbuf.MessageHeader || (flatbuf.MessageHeader = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FieldNode {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FieldNode\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The number of value slots in the Arrow array at this level of a nested\n                     * tree\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The number of observed nulls. Fields with null_count == 0 may choose not\n                     * to write their physical validity bitmap out as a materialized buffer,\n                     * instead setting the length of the bitmap buffer to 0.\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    nullCount() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     * @param flatbuffers.Long null_count\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldNode(builder, length, null_count) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(null_count);\n                        builder.writeInt64(length);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.FieldNode = FieldNode;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class RecordBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns RecordBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param RecordBatch= obj\n                     * @returns RecordBatch\n                     */\n                    static getRootAsRecordBatch(bb, obj) {\n                        return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * number of records / rows. The arrays in the batch should all have this\n                     * length\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * Nodes correspond to the pre-ordered flattened logical schema\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.FieldNode= obj\n                     * @returns org.apache.arrow.flatbuf.FieldNode\n                     */\n                    nodes(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    nodesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Buffers correspond to the pre-ordered flattened buffer tree\n                     *\n                     * The number of buffers appended to this list depends on the schema. For\n                     * example, most primitive arrays will have 2 buffers, 1 for the validity\n                     * bitmap and 1 for the values. For struct arrays, there will only be a\n                     * single buffer for the validity (nulls) bitmap\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Buffer= obj\n                     * @returns org.apache.arrow.flatbuf.Buffer\n                     */\n                    buffers(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    buffersLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startRecordBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     */\n                    static addLength(builder, length) {\n                        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nodesOffset\n                     */\n                    static addNodes(builder, nodesOffset) {\n                        builder.addFieldOffset(1, nodesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startNodesVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset buffersOffset\n                     */\n                    static addBuffers(builder, buffersOffset) {\n                        builder.addFieldOffset(2, buffersOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startBuffersVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endRecordBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createRecordBatch(builder, length, nodesOffset, buffersOffset) {\n                        RecordBatch.startRecordBatch(builder);\n                        RecordBatch.addLength(builder, length);\n                        RecordBatch.addNodes(builder, nodesOffset);\n                        RecordBatch.addBuffers(builder, buffersOffset);\n                        return RecordBatch.endRecordBatch(builder);\n                    }\n                }\n                flatbuf.RecordBatch = RecordBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryBatch= obj\n                     * @returns DictionaryBatch\n                     */\n                    static getRootAsDictionaryBatch(bb, obj) {\n                        return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.RecordBatch= obj\n                     * @returns org.apache.arrow.flatbuf.RecordBatch|null\n                     */\n                    data(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * If isDelta is true the values in the dictionary are to be appended to a\n                     * dictionary with the indicated id\n                     *\n                     * @returns boolean\n                     */\n                    isDelta() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dataOffset\n                     */\n                    static addData(builder, dataOffset) {\n                        builder.addFieldOffset(1, dataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isDelta\n                     */\n                    static addIsDelta(builder, isDelta) {\n                        builder.addFieldInt8(2, +isDelta, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryBatch(builder, id, dataOffset, isDelta) {\n                        DictionaryBatch.startDictionaryBatch(builder);\n                        DictionaryBatch.addId(builder, id);\n                        DictionaryBatch.addData(builder, dataOffset);\n                        DictionaryBatch.addIsDelta(builder, isDelta);\n                        return DictionaryBatch.endDictionaryBatch(builder);\n                    }\n                }\n                flatbuf.DictionaryBatch = DictionaryBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Message {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Message\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Message= obj\n                     * @returns Message\n                     */\n                    static getRootAsMessage(bb, obj) {\n                        return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MessageHeader\n                     */\n                    headerType() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n                    }\n                    /**\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    header(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMessage(builder) {\n                        builder.startObject(5);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MessageHeader headerType\n                     */\n                    static addHeaderType(builder, headerType) {\n                        builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset headerOffset\n                     */\n                    static addHeader(builder, headerOffset) {\n                        builder.addFieldOffset(2, headerOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long bodyLength\n                     */\n                    static addBodyLength(builder, bodyLength) {\n                        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(4, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMessage(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishMessageBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n                        Message.startMessage(builder);\n                        Message.addVersion(builder, version);\n                        Message.addHeaderType(builder, headerType);\n                        Message.addHeader(builder, headerOffset);\n                        Message.addBodyLength(builder, bodyLength);\n                        Message.addCustomMetadata(builder, customMetadataOffset);\n                        return Message.endMessage(builder);\n                    }\n                }\n                flatbuf.Message = Message;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\nexport var ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport var DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport var TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport var Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport var UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport var IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport var MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport var MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    /** The default placeholder type */\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    /** A NULL type having no physical storage */\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /** 2, 4, or 8-byte floating point value */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    /** UTF8 variable-length string as List<Char> */\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    /** A list of some logical data type */\n    Type[Type[\"List\"] = 12] = \"List\";\n    /** Struct of logical types */\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    /** Union of logical types */\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    /** Map of named logical types */\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    /** Dictionary aka Category type */\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    let xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport function* iterateBits(bytes, begin, length, context, get) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = byteOffset | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, } from './type';\nexport class Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    let fn = null;\n    let dtype = Type.NONE;\n    // tslint:disable\n    if (node instanceof Data) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof Vector) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof DataType) {\n        dtype = inferDType(node);\n    }\n    else if (typeof (dtype = node) !== 'number') {\n        dtype = Type[node];\n    }\n    switch (dtype) {\n        case Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case Type.List:\n            fn = visitor.visitList;\n            break;\n        case Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch (type.precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch (type.unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch (type.unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch (type.mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields));\n    }\n    compareFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i])));\n    }\n    compareField(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type));\n    }\n}\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexport const instance = new TypeComparator();\n\n//# sourceMappingURL=typecomparator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { instance as comparer } from './visitor/typecomparator';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return x && x.typeId === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return x && x.typeId === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return x && x.typeId === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return x && x.typeId === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return x && x.typeId === Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return x && x.typeId === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return x && x.typeId === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return x && x.typeId === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return x && x.typeId === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return x && x.typeId === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return x && x.typeId === Type.Interval; }\n    /** @nocollapse */ static isList(x) { return x && x.typeId === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return x && x.typeId === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return x && x.typeId === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return x && x.typeId === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return x && x.typeId === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return x && x.typeId === Type.Dictionary; }\n    get typeId() { return Type.NONE; }\n    compareTo(other) {\n        return comparer.visit(this, other);\n    }\n}\nDataType[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return Type.Null; }\n}\nNull[Symbol.toStringTag] = ((proto) => {\n    return proto[Symbol.toStringTag] = 'Null';\n})(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\nInt_[Symbol.toStringTag] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\nFloat[Symbol.toStringTag] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Binary; }\n    toString() { return `Binary`; }\n}\nBinary[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Utf8; }\n    toString() { return `Utf8`; }\n}\nUtf8[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Bool; }\n    toString() { return `Bool`; }\n}\nBool[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n    }\n    get typeId() { return Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\nDecimal[Symbol.toStringTag] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\nDate_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Time; }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n}\nTime_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return Type.Timestamp; }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\nTimestamp_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Interval; }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\nInterval_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\nList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    get typeId() { return Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nStruct[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null));\n    }\n    get typeId() { return Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\nUnion_[Symbol.toStringTag] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\nFixedSizeBinary[Symbol.toStringTag] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\nFixedSizeList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nMap_[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    get typeId() { return Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\nDictionary[Symbol.toStringTag] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    let t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        case Type.Int: return 1 + +(t.bitWidth > 32);\n        case Type.Time: return 1 + +(t.bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\n/** @ignore */ export const kUnknownNullCount = -1;\n/** @ignore */\nexport class Data {\n    constructor(type, offset, length, nullCount, buffers, childData, dictionary) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data);\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    clone(type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, childData = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(childData, offset, length) {\n        return childData.map((child) => child.slice(offset, length));\n    }\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    static new(type, offset, length, nullCount, buffers, childData, dictionary) {\n        if (buffers instanceof Data) {\n            buffers = buffers.buffers;\n        }\n        else if (!buffers) {\n            buffers = [];\n        }\n        switch (type.typeId) {\n            case Type.Null: return Data.Null(type, offset, length);\n            case Type.Int: return Data.Int(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Dictionary: return Data.Dictionary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary);\n            case Type.Float: return Data.Float(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Bool: return Data.Bool(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Decimal: return Data.Decimal(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Date: return Data.Date(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Time: return Data.Time(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Timestamp: return Data.Timestamp(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Interval: return Data.Interval(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.FixedSizeBinary: return Data.FixedSizeBinary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Binary: return Data.Binary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.Utf8: return Data.Utf8(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.List: return Data.List(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.FixedSizeList: return Data.FixedSizeList(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]);\n            case Type.Struct: return Data.Struct(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []);\n            case Type.Map: return Data.Map(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.Union: return Data.Union(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData);\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n    /** @nocollapse */\n    static Null(type, offset, length) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    static Int(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Dictionary(type, offset, length, nullCount, nullBitmap, data, dictionary) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    static Float(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Bool(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Decimal(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Date(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Time(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Timestamp(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Interval(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static FixedSizeBinary(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Binary(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Utf8(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static List(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static FixedSizeList(type, offset, length, nullCount, nullBitmap, child) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Struct(type, offset, length, nullCount, nullBitmap, children) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    static Map(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Union(type, offset, length, nullCount, nullBitmap, typeIds, valueOffsetsOrChildren, children) {\n        const buffers = [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ];\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\nData.prototype.childData = Object.freeze([]);\n\n//# sourceMappingURL=data.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */ const undf = void (0);\n/** @ignore */\nexport function valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n\n//# sourceMappingURL=pretty.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction(nullValues) {\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value) { return true; };\n    }\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n    return new Function(`x`, `${fnBody}\\nreturn true;`);\n}\n/** @ignore */\nfunction valueToCase(x) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    }\n    else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n\n//# sourceMappingURL=valid.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = (arr, len = 0) => (arr.length >= len ? arr.subarray(0, len) : memcpy(new arr.constructor(len), arr, 0));\n/** @ignore */\nexport class BufferBuilder {\n    constructor(buffer, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n    get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    get reservedLength() { return this.buffer.length / this.stride; }\n    get reservedByteLength() { return this.buffer.byteLength; }\n    // @ts-ignore\n    set(index, value) { return this; }\n    append(value) { return this.set(this.length, value); }\n    reserve(extra) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n            }\n        }\n        return this;\n    }\n    flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    _resize(newLength) {\n        return this.buffer = memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\nBufferBuilder.prototype.offset = 0;\n/** @ignore */\nexport class DataBufferBuilder extends BufferBuilder {\n    last() { return this.get(this.length - 1); }\n    get(index) { return this.buffer[index]; }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Uint8Array(0)) {\n        super(data, 1 / 8);\n        this.numValid = 0;\n    }\n    get numInvalid() { return this.length - this.numValid; }\n    get(idx) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    set(idx, val) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |= (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    append(value) {\n        return this.set(this.length - 1, value);\n    }\n    set(index, value) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n/** @ignore */\nexport class WideBufferBuilder extends BufferBuilder {\n    get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint':\n                this.buffer64[index] = value;\n                break;\n            case 'number':\n                this.buffer[index * this.stride] = value;\n                break;\n            default: this.buffer.set(value, index * this.stride);\n        }\n        return this;\n    }\n    _resize(newLength) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport { strideForType } from './type';\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport class Builder {\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }) {\n        /**\n         * The number of values written to the `Builder` that haven't been flushed yet.\n         * @readonly\n         */\n        this.length = 0;\n        /**\n         * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n         * @readonly\n         */\n        this.finished = false;\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    static new(options) { }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughDOM(options) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    static throughIterable(options) {\n        return throughIterable(options);\n    }\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    static throughAsyncIterable(options) {\n        return throughAsyncIterable(options);\n    }\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    toVector() { return Vector.new(this.flush()); }\n    get ArrayType() { return this.type.ArrayType; }\n    get nullCount() { return this._nulls.numInvalid; }\n    get numChildren() { return this.children.length; }\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    get byteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    get reservedLength() {\n        return this._nulls.reservedLength;\n    }\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    get reservedByteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n    get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n    get values() { return this._values ? this._values.buffer : null; }\n    get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n    get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    append(value) { return this.set(this.length, value); }\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    isValid(value) { return this._isValid(value); }\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    set(index, value) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    setValue(index, value) { this._setValue(this, index, value); }\n    setValid(index, valid) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    getChildAt(index) {\n        return this.children[index] || null;\n    }\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    flush() {\n        const buffers = [];\n        const values = this._values;\n        const offsets = this._offsets;\n        const typeIds = this._typeIds;\n        const { length, nullCount } = this;\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        }\n        else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        }\n        else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n        const data = Data.new(this.type, 0, length, nullCount, buffers, this.children.map((child) => child.flush()));\n        this.clear();\n        return data;\n    }\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\nBuilder.prototype.length = 1;\nBuilder.prototype.stride = 1;\nBuilder.prototype.children = null;\nBuilder.prototype.finished = false;\nBuilder.prototype.nullValues = null;\nBuilder.prototype._isValid = () => true;\n/** @ignore */\nexport class FixedWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    setValue(index, value) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n/** @ignore */\nexport class VariableWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._pendingLength = 0;\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    setValue(index, value) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    setValid(index, isValid) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    flush() {\n        this._flush();\n        return super.flush();\n    }\n    finish() {\n        this._flush();\n        return super.finish();\n    }\n    _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n}\n/** @ignore */\nfunction throughIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n/** @ignore */\nfunction throughAsyncIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class BoolBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    setValue(index, value) {\n        this._values.set(index, +value);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../builder';\n/** @ignore */\nexport class NullBuilder extends Builder {\n    // @ts-ignore\n    setValue(index, value) { }\n    setValid(index, valid) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DateBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class DateDayBuilder extends DateBuilder {\n}\n/** @ignore */\nexport class DateMillisecondBuilder extends DateBuilder {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DecimalBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Dictionary } from '../type';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class DictionaryBuilder extends Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FixedSizeBinaryBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    }\n    else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\n\n//# sourceMappingURL=math.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FloatBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class Float16Builder extends FloatBuilder {\n    setValue(index, value) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n/** @ignore */\nexport class Float32Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Float64Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toArrayBufferView } from './buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n/** @ignore */\nexport let bignumToString;\n/** @ignore */\nexport let bignumToBigInt;\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = bignumToString;\n}\nelse {\n    bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nexport class BN {\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n}\n\n//# sourceMappingURL=bn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntBuilder extends FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Int8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\n/** @ignore */\nexport class Uint8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\nconst toBigInt = ((memo) => (value) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimeBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimeSecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMillisecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMicrosecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeNanosecondBuilder extends TimeBuilder {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimestampBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimestampSecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMillisecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMicrosecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampNanosecondBuilder extends TimestampBuilder {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntervalBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class IntervalDayTimeBuilder extends IntervalBuilder {\n}\n/** @ignore */\nexport class IntervalYearMonthBuilder extends IntervalBuilder {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class BinaryBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    _flushPending(pending, pendingLength) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class Utf8Builder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, encodeUtf8(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nUtf8Builder.prototype._flushPending = BinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\n/** @ignore */\nexport class Run {\n    get length() { return this._values.length; }\n    get(index) { return this._values[index]; }\n    clear() { this._values = null; return this; }\n    bind(values) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this;\n    }\n}\n\n//# sourceMappingURL=run.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nclass Row {\n    constructor(parent, numKeys) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n    entries() { return this[Symbol.iterator](); }\n    has(key) { return this.get(key) !== undefined; }\n    get(key) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n            else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n    set(key, val) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n    clear() { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n    delete(_) { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n    *[Symbol.iterator]() {\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v, k, m) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n    toArray() { return [...this.values()]; }\n    toJSON() {\n        const obj = {};\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n    inspect() { return this.toString(); }\n    [kCustomInspect]() { return this.toString(); }\n    toString() {\n        const str = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n}\nRow[Symbol.toStringTag] = ((proto) => {\n    Object.defineProperties(proto, {\n        'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n        [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n        [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n    });\n    return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\nexport class MapRow extends Row {\n    constructor(slice) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    keys() {\n        return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n    values() {\n        return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n    getKey(idx) {\n        return this[kParent].getChildAt(0).get(idx);\n    }\n    getIndex(key) {\n        return this[kParent].getChildAt(0).indexOf(key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(1).get(index);\n    }\n    setValue(index, value) {\n        this[kParent].getChildAt(1).set(index, value);\n    }\n}\nexport class StructRow extends Row {\n    constructor(parent) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name;\n        }\n    }\n    *values() {\n        for (const field of this[kParent].type.children) {\n            yield this[field.name];\n        }\n    }\n    getKey(idx) {\n        return this[kParent].type.children[idx].name;\n    }\n    getIndex(key) {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n    setValue(index, value) {\n        return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n}\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null, set: null };\n    return (row) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key) => function () { return this.get(key); };\n        const setter = (key) => function (val) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row, key) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row, key, receiver) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row, key, val, receiver) {\n            switch (key) {\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return (row) => new Proxy(row, RowProxyHandler);\n})();\n\n//# sourceMappingURL=row.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n/** @ignore */\nexport function clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nexport function clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nexport function createElementComparator(search) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value) => value === search\n            : (value) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return creatMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof Vector) {\n        return createVectorComparator(search);\n    }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n    let i = -1;\n    const comparators = [];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) {\n        return () => false;\n    }\n    const comparators = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\nfunction compareArray(comparators, arr) {\n    const n = comparators.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparators, vec) {\n    const n = comparators.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparators, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { clampRange } from '../util/vector';\nimport { DataType } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class Chunked extends AbstractVector {\n    constructor(type, chunks = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._nullCount = -1;\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n    /** @nocollapse */\n    static flatten(...vectors) {\n        return selectChunkArgs(Vector, vectors);\n    }\n    /** @nocollapse */\n    static concat(...vectors) {\n        const chunks = Chunked.flatten(...vectors);\n        return new Chunked(chunks[0].type, chunks);\n    }\n    get type() { return this._type; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get typeId() { return this._type.typeId; }\n    get VectorName() { return `Chunked<${this._type}>`; }\n    get data() {\n        return this._chunks[0] ? this._chunks[0].data : null;\n    }\n    get ArrayType() { return this._type.ArrayType; }\n    get numChildren() { return this._numChildren; }\n    get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    get byteLength() {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n    get indices() {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = this._chunks;\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices)));\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    get dictionary() {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary;\n        }\n        return null;\n    }\n    *[Symbol.iterator]() {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n    clone(chunks = this._chunks) {\n        return new Chunked(this._type, chunks);\n    }\n    concat(...others) {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n    slice(begin, end) {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this._numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let child, field, chunks;\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = (this._type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked(field.type, chunks));\n            }\n        }\n        return null;\n    }\n    search(index, then) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0) {\n            return null;\n        }\n        if (idx >= offsets[rhs]) {\n            return null;\n        }\n        if (rhs <= 1) {\n            return then ? then(this, 0, idx) : [0, idx];\n        }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n    isValid(index) {\n        return !!this.search(index, this.isValidInternal);\n    }\n    get(index) {\n        return this.search(index, this.getInternal);\n    }\n    set(index, value) {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n    indexOf(element, offset) {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element));\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n    toArray() {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType = this._type.ArrayType;\n        if (n <= 0) {\n            return new ArrayType(0);\n        }\n        if (n <= 1) {\n            return chunks[0].toArray();\n        }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n    getInternal({ _chunks }, i, j) { return _chunks[i].get(j); }\n    isValidInternal({ _chunks }, i, j) { return _chunks[i].isValid(j); }\n    indexOfInternal({ _chunks }, chunkIndex, fromIndex, element) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n    _sliceInternal(self, begin, end) {\n        const slices = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) {\n                break;\n            }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) {\n                continue;\n            }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to));\n        }\n        return self.clone(slices);\n    }\n}\n/** @ignore */\nfunction calculateOffsets(vectors) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n/** @ignore */\nconst typedSet = (src, dst, offset) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n/** @ignore */\nconst arraySet = (src, dst, offset) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n//# sourceMappingURL=chunked.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from './schema';\nimport { Vector } from './vector';\nimport { Chunked } from './vector/chunked';\nexport class Column extends Chunked {\n    constructor(field, vectors = [], offsets) {\n        vectors = Chunked.flatten(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n    /** @nocollapse */\n    static new(field, data, ...rest) {\n        const chunks = Chunked.flatten(Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n                [Vector.new(data, ...rest)]);\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        }\n        else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n    get field() { return this._field; }\n    get name() { return this._field.name; }\n    get nullable() { return this._field.nullable; }\n    get metadata() { return this._field.metadata; }\n    clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let column, field, chunks;\n        if (column = columns[index]) {\n            return column;\n        }\n        if (field = (this.type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass SingleChunkColumn extends Column {\n    constructor(field, vector, offsets) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    search(index, then) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    isValid(index) {\n        return this._chunk.isValid(index);\n    }\n    get(index) {\n        return this._chunk.get(index);\n    }\n    set(index, value) {\n        this._chunk.set(index, value);\n    }\n    indexOf(element, offset) {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n\n//# sourceMappingURL=column.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\nconst isArray = Array.isArray;\n/** @ignore */\nexport const selectArgs = (Ctor, vals) => _selectArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnArgs = (args) => {\n    const [fields, values] = _selectFieldArgs(args, [[], []]);\n    return values.map((x, i) => x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) :\n            Column.new(fields[i], []));\n};\n/** @ignore */\nexport const selectFieldArgs = (args) => _selectFieldArgs(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = (Ctor, vals) => _selectChunkArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectVectorChildrenArgs = (Ctor, vals) => _selectVectorChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnChildrenArgs = (Ctor, vals) => _selectColumnChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nfunction _selectArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectChunkArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectVectorChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)), res, j).length;\n        }\n        else if (value instanceof Vector) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectColumnChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i))), res, j).length;\n        }\n        else if (value instanceof Column) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nconst toKeysAndValues = (xs, [k, v], i) => (xs[0][i] = k, xs[1][i] = v, xs);\n/** @ignore */\nfunction _selectFieldArgs(vals, ret) {\n    let keys, n;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) {\n                return ret;\n            }\n            if (isArray(vals[0])) {\n                return _selectFieldArgs(vals[0], ret);\n            }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field;\n    let val;\n    let [fields, values] = ret;\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        }\n        else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val, true);\n            }\n            else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val));\n                fields[++fieldIndex] = Field.new(field, val.type, true);\n            }\n        }\n    }\n    return ret;\n}\n\n//# sourceMappingURL=args.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\nexport class Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    /** @nocollapse */\n    static from(...args) {\n        return Schema.new(args[0], args[1]);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    compareTo(other) {\n        return comparer.compareSchemas(this, other);\n    }\n    select(...columnNames) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    selectAt(...columnIndices) {\n        return new Schema(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n    assign(...args) {\n        const other = args[0] instanceof Schema ? args[0]\n            : new Schema(selectArgs(Field, args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\nexport class Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    compareTo(other) {\n        return comparer.compareField(this, other);\n    }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n\n//# sourceMappingURL=schema.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class ListBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._run = new Run();\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    _flushPending(pending) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { FixedSizeList } from '../type';\n/** @ignore */\nexport class FixedSizeListBuilder extends Builder {\n    constructor() {\n        super(...arguments);\n        this._run = new Run();\n    }\n    setValue(index, value) {\n        super.setValue(index, this._run.bind(value));\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Map_ } from '../type';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class MapBuilder extends VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { Struct } from '../type';\n/** @ignore */\nexport class StructBuilder extends Builder {\n    addChild(child, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\nimport { Union } from '../type';\n/** @ignore */\nexport class UnionBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n    // @ts-ignore\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        super.setValue(index, value);\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n/** @ignore */\nexport class SparseUnionBuilder extends UnionBuilder {\n}\n/** @ignore */\nexport class DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        this._offsets.set(index, this.getChildAt(childIndex).length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class SetVisitor extends Visitor {\n}\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nconst setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric = ({ stride, values }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16 = ({ stride, values }, index, value) => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2 = (vector, index, value) => {\n    switch (typeof value) {\n        case 'bigint':\n            vector.values64[index] = value;\n            break;\n        case 'number':\n            vector.values[index * vector.stride] = value;\n            break;\n        default:\n            const val = value;\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = (vector, index, value) => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector, index, value)\n        : setNumericX2(vector, index, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = (vector, index, value) => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector, index, value)\n        : setFloat16(vector, index, value);\n};\n/* istanbul ignore next */\nconst setDate = (vector, index, value) => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector, index, value)\n        : setDateMillisecond(vector, index, value);\n};\n/** @ignore */\nconst setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setTimeSecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setDecimal = ({ values }, index, value) => { values.set(value.subarray(0, 4), 4 * index); };\n/** @ignore */\nconst setList = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n/** @ignore */\nconst setMap = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (c, _, i) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (c, _, i) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (c, f, _) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (c, f, _) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = (vector, index, value) => {\n    const setValue = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    vector.type.children.forEach((f, i) => setValue(vector.getChildAt(i), f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (vector, index, value) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector, index, value) :\n        setSparseUnion(vector, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n/** @ignore */\nconst setDictionary = (vector, index, value) => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (vector, index, value) => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector, index, value)\n        : setIntervalYearMonth(vector, index, value);\n};\n/** @ignore */\nconst setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nconst setFixedSizeList = (vector, index, value) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\nSetVisitor.prototype.visitBool = setBool;\nSetVisitor.prototype.visitInt = setInt;\nSetVisitor.prototype.visitInt8 = setNumeric;\nSetVisitor.prototype.visitInt16 = setNumeric;\nSetVisitor.prototype.visitInt32 = setNumeric;\nSetVisitor.prototype.visitInt64 = setNumericX2;\nSetVisitor.prototype.visitUint8 = setNumeric;\nSetVisitor.prototype.visitUint16 = setNumeric;\nSetVisitor.prototype.visitUint32 = setNumeric;\nSetVisitor.prototype.visitUint64 = setNumericX2;\nSetVisitor.prototype.visitFloat = setFloat;\nSetVisitor.prototype.visitFloat16 = setFloat16;\nSetVisitor.prototype.visitFloat32 = setNumeric;\nSetVisitor.prototype.visitFloat64 = setNumeric;\nSetVisitor.prototype.visitUtf8 = setUtf8;\nSetVisitor.prototype.visitBinary = setBinary;\nSetVisitor.prototype.visitFixedSizeBinary = setFixedSizeBinary;\nSetVisitor.prototype.visitDate = setDate;\nSetVisitor.prototype.visitDateDay = setDateDay;\nSetVisitor.prototype.visitDateMillisecond = setDateMillisecond;\nSetVisitor.prototype.visitTimestamp = setTimestamp;\nSetVisitor.prototype.visitTimestampSecond = setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond = setTimestampNanosecond;\nSetVisitor.prototype.visitTime = setTime;\nSetVisitor.prototype.visitTimeSecond = setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond = setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond = setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond = setTimeNanosecond;\nSetVisitor.prototype.visitDecimal = setDecimal;\nSetVisitor.prototype.visitList = setList;\nSetVisitor.prototype.visitStruct = setStruct;\nSetVisitor.prototype.visitUnion = setUnion;\nSetVisitor.prototype.visitDenseUnion = setDenseUnion;\nSetVisitor.prototype.visitSparseUnion = setSparseUnion;\nSetVisitor.prototype.visitDictionary = setDictionary;\nSetVisitor.prototype.visitInterval = setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime = setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth = setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList = setFixedSizeList;\nSetVisitor.prototype.visitMap = setMap;\n/** @ignore */\nexport const instance = new SetVisitor();\n\n//# sourceMappingURL=set.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    visitNull() { return NullBuilder; }\n    visitBool() { return BoolBuilder; }\n    visitInt() { return IntBuilder; }\n    visitInt8() { return Int8Builder; }\n    visitInt16() { return Int16Builder; }\n    visitInt32() { return Int32Builder; }\n    visitInt64() { return Int64Builder; }\n    visitUint8() { return Uint8Builder; }\n    visitUint16() { return Uint16Builder; }\n    visitUint32() { return Uint32Builder; }\n    visitUint64() { return Uint64Builder; }\n    visitFloat() { return FloatBuilder; }\n    visitFloat16() { return Float16Builder; }\n    visitFloat32() { return Float32Builder; }\n    visitFloat64() { return Float64Builder; }\n    visitUtf8() { return Utf8Builder; }\n    visitBinary() { return BinaryBuilder; }\n    visitFixedSizeBinary() { return FixedSizeBinaryBuilder; }\n    visitDate() { return DateBuilder; }\n    visitDateDay() { return DateDayBuilder; }\n    visitDateMillisecond() { return DateMillisecondBuilder; }\n    visitTimestamp() { return TimestampBuilder; }\n    visitTimestampSecond() { return TimestampSecondBuilder; }\n    visitTimestampMillisecond() { return TimestampMillisecondBuilder; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondBuilder; }\n    visitTimestampNanosecond() { return TimestampNanosecondBuilder; }\n    visitTime() { return TimeBuilder; }\n    visitTimeSecond() { return TimeSecondBuilder; }\n    visitTimeMillisecond() { return TimeMillisecondBuilder; }\n    visitTimeMicrosecond() { return TimeMicrosecondBuilder; }\n    visitTimeNanosecond() { return TimeNanosecondBuilder; }\n    visitDecimal() { return DecimalBuilder; }\n    visitList() { return ListBuilder; }\n    visitStruct() { return StructBuilder; }\n    visitUnion() { return UnionBuilder; }\n    visitDenseUnion() { return DenseUnionBuilder; }\n    visitSparseUnion() { return SparseUnionBuilder; }\n    visitDictionary() { return DictionaryBuilder; }\n    visitInterval() { return IntervalBuilder; }\n    visitIntervalDayTime() { return IntervalDayTimeBuilder; }\n    visitIntervalYearMonth() { return IntervalYearMonthBuilder; }\n    visitFixedSizeList() { return FixedSizeListBuilder; }\n    visitMap() { return MapBuilder; }\n}\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n\n//# sourceMappingURL=builderctor.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Footer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Footer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Footer= obj\n                     * @returns Footer\n                     */\n                    static getRootAsFooter(bb, obj) {\n                        return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.Schema= obj\n                     * @returns org.apache.arrow.flatbuf.Schema|null\n                     */\n                    schema(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    dictionaries(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    dictionariesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    recordBatches(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    recordBatchesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFooter(builder) {\n                        builder.startObject(4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset schemaOffset\n                     */\n                    static addSchema(builder, schemaOffset) {\n                        builder.addFieldOffset(1, schemaOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionariesOffset\n                     */\n                    static addDictionaries(builder, dictionariesOffset) {\n                        builder.addFieldOffset(2, dictionariesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startDictionariesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset recordBatchesOffset\n                     */\n                    static addRecordBatches(builder, recordBatchesOffset) {\n                        builder.addFieldOffset(3, recordBatchesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startRecordBatchesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFooter(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishFooterBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n                        Footer.startFooter(builder);\n                        Footer.addVersion(builder, version);\n                        Footer.addSchema(builder, schemaOffset);\n                        Footer.addDictionaries(builder, dictionariesOffset);\n                        Footer.addRecordBatches(builder, recordBatchesOffset);\n                        return Footer.endFooter(builder);\n                    }\n                }\n                flatbuf.Footer = Footer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Block {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Block\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * Index to the start of the RecordBlock (note this is past the Message header)\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * Length of the metadata\n                     *\n                     * @returns number\n                     */\n                    metaDataLength() {\n                        return this.bb.readInt32(this.bb_pos + 8);\n                    }\n                    /**\n                     * Length of the data (this is aligned so there can be a gap between this and\n                     * the metatdata).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        return this.bb.readInt64(this.bb_pos + 16);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param number metaDataLength\n                     * @param flatbuffers.Long bodyLength\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBlock(builder, offset, metaDataLength, bodyLength) {\n                        builder.prep(8, 24);\n                        builder.writeInt64(bodyLength);\n                        builder.pad(4);\n                        builder.writeInt32(metaDataLength);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Block = Block;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=File.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport { Builder } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\nimport { Type } from '../enum';\nimport { Utf8Builder } from './utf8';\nimport { Builder } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n/** @nocollapse */\nBuilder.new = newBuilder;\nfunction newBuilder(options) {\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn(type)())(options);\n    if (type.children && type.children.length > 0) {\n        const children = options['children'] || [];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_, i) => children[i] || defaultOptions)\n            : (({ name }) => children[name] || defaultOptions);\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n    return builder;\n}\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n    const BuilderCtor = getBuilderConstructor.visit(typeId);\n    BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n});\nUtf8Builder.prototype._setValue = setVisitor.visitBinary;\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* tslint:disable:class-name */\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar _Block = File_.org.apache.arrow.flatbuf.Block;\nvar _Footer = File_.org.apache.arrow.flatbuf.Footer;\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n        const dictionaryBatchesOffset = b.endVector();\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nexport class FileBlock {\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\n/** @ignore */\nexport class AsyncByteQueue extends AsyncQueue {\n    write(value) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values)[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n/** @ignore */\nexport class ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nexport class AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        }\n        else if (isReadableDOMStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        }\n        else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n        }\n        else if (isIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        }\n        else if (isPromise(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isAsyncIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    async cancel(reason) { await this.return(reason); }\n    get closed() { return this._closedPromise; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    async next(size, cmd = 'read') { return (await this.source.next({ cmd, size })); }\n    async throw(value) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    async return(value) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n\n//# sourceMappingURL=stream.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { toUint8Array } from '../util/buffer';\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    async readInt32(position) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    async seek(position) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    async read(nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    async readAt(position, nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    async throw(value) { await this.close(); return { done: true, value }; }\n    async return(value) { await this.close(); return { done: true, value }; }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000];\n/** @ignore */\nexport class BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n    visitNull(type, { length, } = this.nextFieldNode()) { return Data.Null(type, 0, length); }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) { return Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) { return Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) { return Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) { return Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) { return Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) { return Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) { return Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) { return Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) { return Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) { return Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children)); }\n    visitUnion(type) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type); }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children)); }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type)); }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) { return Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0])); }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) { return Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n        }\n        else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (DataType.isBool(type)) {\n            return packBools(sources[offset]);\n        }\n        else if (DataType.isUtf8(type)) {\n            return encodeUtf8(sources[offset].join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport * as Schema_ from '../fb/Schema';\nimport { Visitor } from '../visitor';\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Schema, Field } from '../../schema';\nimport { Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n/** @ignore */\nexport function schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\n/** @ignore */\nexport function recordBatchFromJSON(b) {\n    return new RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\n/** @ignore */\nexport function dictionaryBatchFromJSON(b) {\n    return new DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nexport function fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new Null();\n        case 'null': return new Null();\n        case 'binary': return new Binary();\n        case 'utf8': return new Utf8();\n        case 'bool': return new Bool();\n        case 'list': return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar Type = Schema_.org.apache.arrow.flatbuf.Type;\nvar _Field = Schema_.org.apache.arrow.flatbuf.Field;\nvar _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nvar _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nvar _Message = Message_.org.apache.arrow.flatbuf.Message;\nvar _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nvar _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nvar _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nvar _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport { DataType, Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\n/**\n * @ignore\n * @private\n **/\nexport class Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === MessageHeader.DictionaryBatch; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema()));\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type.NONE: return new Null();\n        case Type.Null: return new Null();\n        case Type.Binary: return new Binary();\n        case Type.Utf8: return new Utf8();\n        case Type.Bool: return new Bool();\n        case Type.List: return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int());\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint());\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal());\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date());\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time());\n            return new Time(t.unit(), t.bitWidth());\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp());\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval());\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union());\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary());\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList());\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map());\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    let type = field.type;\n    let typeId = field.typeId;\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b);\n        typeOffset = typeAssembler.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (function () {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ITERATOR_DONE } from '../io/interfaces';\n/** @ignore */ const invalidMessageType = (type) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nexport class MessageReader {\n    constructor(source) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n                ? new AsyncRandomAccessFile(source, byteLength)\n                : new AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    async next() {\n        let r;\n        if ((r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = await this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    async throw(value) { return await this.source.throw(value); }\n    async return(value) { return await this.source.return(value); }\n    async readMessage(type) {\n        let r;\n        if ((r = await this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    async readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    async readMetadataLength() {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    async readMetadata(metadataLength) {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n/** @ignore */\nexport function checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport { DataType, } from '../type';\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n    constructor() {\n        super();\n        this._byteLength = 0;\n        this._nodes = [];\n        this._buffers = [];\n        this._bufferRegions = [];\n    }\n    /** @nocollapse */\n    static assemble(...args) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n    visit(vector) {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap));\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n    visitNull(_nullV) {\n        return this;\n    }\n    visitDictionary(vector) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n    get nodes() { return this._nodes; }\n    get buffers() { return this._buffers; }\n    get byteLength() { return this._byteLength; }\n    get bufferRegions() { return this._bufferRegions; }\n}\n/** @ignore */\nfunction addBuffer(values) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n/** @ignore */\nfunction assembleUnion(vector) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    }\n    else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        }\n        else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n/** @ignore */\nfunction assembleBoolVector(vector) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    }\n    else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n/** @ignore */\nfunction assembleFlatVector(vector) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(vector) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n/** @ignore */\nfunction assembleListVector(vector) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0));\n}\n/** @ignore */\nfunction assembleNestedVector(vector) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)).filter(Boolean))[0];\n}\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n\n//# sourceMappingURL=vectorassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ReadableInterop } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\nexport class RecordBatchWriter extends ReadableInterop {\n    constructor(options) {\n        super();\n        this._position = 0;\n        this._started = false;\n        // @ts-ignore\n        this._sink = new AsyncByteQueue();\n        this._schema = null;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    toString(sync = false) {\n        return this._sink.toString(sync);\n    }\n    toUint8Array(sync = false) {\n        return this._sink.toUint8Array(sync);\n    }\n    writeAll(input) {\n        if (isPromise(input)) {\n            return input.then((x) => this.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, input);\n    }\n    get closed() { return this._sink.closed; }\n    [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    toDOMStream(options) { return this._sink.toDOMStream(options); }\n    toNodeStream(options) { return this._sink.toNodeStream(options); }\n    close() {\n        return this.reset()._sink.close();\n    }\n    abort(reason) {\n        return this.reset()._sink.abort(reason);\n    }\n    finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    reset(sink = this._sink, schema = null) {\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink;\n        }\n        else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            }\n            else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            }\n            else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n        return this;\n    }\n    write(payload) {\n        let schema = null;\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        }\n        else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        }\n        else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        }\n        else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n    _writeMessage(message, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) {\n            this._write(buffer);\n        }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n    _write(chunk) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n    _writeSchema(schema) {\n        return this._writeMessage(Message.from(schema));\n    }\n    // @ts-ignore\n    _writeFooter(schema) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n    _writeMagic() {\n        return this._write(MAGIC);\n    }\n    _writePadding(nBytes) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n    _writeRecordBatch(batch) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeBodyBuffers(buffers) {\n        let buffer;\n        let size, padding;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n    _writeDictionaries(batch) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? dictionary.chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n/** @ignore */\nexport class RecordBatchStreamWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input, options) {\n        const writer = new RecordBatchStreamWriter(options);\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n/** @ignore */\nexport class RecordBatchFileWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        const writer = new RecordBatchFileWriter();\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n    // @ts-ignore\n    _writeSchema(schema) {\n        return this._writeMagic()._writePadding(2);\n    }\n    _writeFooter(schema) {\n        const buffer = Footer.encode(new Footer(schema, MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n/** @ignore */\nexport class RecordBatchJSONWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        return new RecordBatchJSONWriter().writeAll(input);\n    }\n    _writeMessage() { return this; }\n    // @ts-ignore\n    _writeFooter(schema) { return this; }\n    _writeSchema(schema) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)}`);\n    }\n    _writeDictionaries(batch) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    _writeRecordBatch(batch) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    close() {\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n        this._dictionaries = [];\n        this._recordBatches = [];\n        return super.close();\n    }\n}\n/** @ignore */\nfunction writeAll(writer, input) {\n    let chunks = input;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nasync function writeAllAsync(writer, batches) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }) {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n\n//# sourceMappingURL=writer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Schema } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength) => [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n];\n/** @ignore */\nexport function ensureSameLengthData(schema, chunks, batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)) {\n    let data;\n    let field;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }));\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return [new Schema(fields), batchLength, batchData];\n}\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches(columns) {\n    return distributeVectorsIntoRecordBatches(new Schema(columns.map(({ field }) => field)), columns);\n}\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, columns) {\n    const fields = [...schema.fields];\n    const batchArgs = [];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1, numColumns = columns.length;\n    let child, childData = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n/** @ignore */\nfunction distributeChildData(fields, batchLength, childData, columns, memo) {\n    let data;\n    let field;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            }\n            else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }));\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return childData;\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class BaseVector extends AbstractVector {\n    constructor(data, children) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n    get type() { return this.data.type; }\n    get typeId() { return this.data.typeId; }\n    get length() { return this.data.length; }\n    get offset() { return this.data.offset; }\n    get stride() { return this.data.stride; }\n    get nullCount() { return this.data.nullCount; }\n    get byteLength() { return this.data.byteLength; }\n    get VectorName() { return `${Type[this.typeId]}Vector`; }\n    get ArrayType() { return this.type.ArrayType; }\n    get values() { return this.data.values; }\n    get typeIds() { return this.data.typeIds; }\n    get nullBitmap() { return this.data.nullBitmap; }\n    get valueOffsets() { return this.data.valueOffsets; }\n    get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n    clone(data, children = this._children) {\n        return Vector.new(data, children);\n    }\n    concat(...others) {\n        return Chunked.concat(this, ...others);\n    }\n    slice(begin, end) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    isValid(index) {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n    getChildAt(index) {\n        return index < 0 || index >= this.numChildren ? null : ((this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new(this.data.childData[index])));\n    }\n    toJSON() { return [...this]; }\n    _sliceInternal(self, begin, end) {\n        return self.clone(self.data.slice(begin, end - begin), null);\n    }\n    // @ts-ignore\n    _bindDataAccessors(data) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\nBaseVector.prototype[Symbol.isConcatSpreadable] = true;\n\n//# sourceMappingURL=base.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Utf8 } from '../type';\n/** @ignore */\nexport class BinaryVector extends BaseVector {\n    asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Bool } from '../type';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class BoolVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DateUnit } from '../enum';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { DateDay, DateMillisecond } from '../type';\n/** @ignore */\nexport class DateVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond(), args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond(), args[0]);\n    }\n}\n/** @ignore */\nexport class DateDayVector extends DateVector {\n}\n/** @ignore */\nexport class DateMillisecondVector extends DateVector {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class DecimalVector extends BaseVector {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Dictionary } from '../type';\n/** @ignore */\nexport class DictionaryVector extends BaseVector {\n    constructor(data) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n    get dictionary() { return this.data.dictionary; }\n    reverseLookup(value) { return this.dictionary.indexOf(value); }\n    getKey(idx) { return this.indices.get(idx); }\n    getValue(key) { return this.dictionary.get(key); }\n    setKey(idx, key) { return this.indices.set(idx, key); }\n    setValue(key, value) { return this.dictionary.set(key, value); }\n}\nDictionaryVector.prototype.indices = null;\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeListVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Float16, Float32, Float64 } from '../type';\n/** @ignore */\nexport class FloatVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        let ArrowType = vectorTypeToDataType(this);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input));\n                }\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n/** @ignore */\nexport class Float16Vector extends FloatVector {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    toFloat32Array() { return new Float32Array(this); }\n    toFloat64Array() { return new Float64Array(this); }\n}\n/** @ignore */\nexport class Float32Vector extends FloatVector {\n}\n/** @ignore */\nexport class Float64Vector extends FloatVector {\n}\nconst convertTo16Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Uint16Array: return Float16;\n        case Float32Array: return Float32;\n        case Float64Array: return Float64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class IntervalVector extends BaseVector {\n}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector {\n}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64 } from '../type';\n/** @ignore */\nexport class IntVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input));\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n/** @ignore */\nexport class Int8Vector extends IntVector {\n}\n/** @ignore */\nexport class Int16Vector extends IntVector {\n}\n/** @ignore */\nexport class Int32Vector extends IntVector {\n}\n/** @ignore */\nexport class Int64Vector extends IntVector {\n    toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n/** @ignore */\nexport class Uint8Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint16Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint32Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint64Vector extends IntVector {\n    toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\nconst convert32To64Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n        (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Array: return Int8;\n        case Int16Array: return Int16;\n        case Int32Array: return is64bit ? Int64 : Int32;\n        case BigInt64Array: return Int64;\n        case Uint8Array: return Uint8;\n        case Uint16Array: return Uint16;\n        case Uint32Array: return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Vector: return Int8;\n        case Int16Vector: return Int16;\n        case Int32Vector: return is64bit ? Int64 : Int32;\n        case Int64Vector: return Int64;\n        case Uint8Vector: return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class ListVector extends BaseVector {\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\nexport class MapVector extends BaseVector {\n    asList() {\n        const child = this.type.children[0];\n        return Vector.new(this.data.clone(new List(child)));\n    }\n    bind(index) {\n        const child = this.getChildAt(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child.slice(begin, end));\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class NullVector extends BaseVector {\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector extends BaseVector {\n    bind(index) {\n        const proto = this._row || (this._row = new StructRow(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimestampVector extends BaseVector {\n}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimeVector extends BaseVector {\n}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class UnionVector extends BaseVector {\n    get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n/** @ignore */\nexport class DenseUnionVector extends UnionVector {\n    get valueOffsets() { return this.data.valueOffsets; }\n}\n/** @ignore */\nexport class SparseUnionVector extends UnionVector {\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class Utf8Vector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function partial0(visit) {\n    return function () { return visit(this); };\n}\n/** @ignore */\nexport function partial1(visit) {\n    return function (a) { return visit(this, a); };\n}\n/** @ignore */\nexport function partial2(visit) {\n    return function (a, b) { return visit(this, a, b); };\n}\n\n//# sourceMappingURL=fn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { uint16ToFloat64 } from '../util/math';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class GetVisitor extends Visitor {\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_vector, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null;\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ stride, values, type }, index) => BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = (vector, index) => (vector.type.bitWidth < 64\n    ? getNumeric(vector, index)\n    : getBigInts(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = (vector, index) => (vector.type.precision !== Precision.HALF\n    ? getNumeric(vector, index)\n    : getFloat16(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (vector, index) => (vector.type.unit === DateUnit.DAY\n    ? getDateDay(vector, index)\n    : getDateMillisecond(vector, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values }, index) => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n/** @ignore */\nconst getList = (vector, index) => {\n    const child = vector.getChildAt(0), { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]);\n};\n/** @ignore */\nconst getMap = (vector, index) => {\n    return vector.bind(index);\n};\n/** @ignore */\nconst getStruct = (vector, index) => {\n    return vector.bind(index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (vector, index) => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector, index) :\n        getSparseUnion(vector, index);\n};\n/** @ignore */\nconst getDenseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n/** @ignore */\nconst getSparseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n/** @ignore */\nconst getDictionary = (vector, index) => {\n    return vector.getValue(vector.getKey(index));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (vector, index) => (vector.type.unit === IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(vector, index)\n    : getIntervalYearMonth(vector, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (vector, index) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride);\n};\nGetVisitor.prototype.visitNull = getNull;\nGetVisitor.prototype.visitBool = getBool;\nGetVisitor.prototype.visitInt = getInt;\nGetVisitor.prototype.visitInt8 = getNumeric;\nGetVisitor.prototype.visitInt16 = getNumeric;\nGetVisitor.prototype.visitInt32 = getNumeric;\nGetVisitor.prototype.visitInt64 = getBigInts;\nGetVisitor.prototype.visitUint8 = getNumeric;\nGetVisitor.prototype.visitUint16 = getNumeric;\nGetVisitor.prototype.visitUint32 = getNumeric;\nGetVisitor.prototype.visitUint64 = getBigInts;\nGetVisitor.prototype.visitFloat = getFloat;\nGetVisitor.prototype.visitFloat16 = getFloat16;\nGetVisitor.prototype.visitFloat32 = getNumeric;\nGetVisitor.prototype.visitFloat64 = getNumeric;\nGetVisitor.prototype.visitUtf8 = getUtf8;\nGetVisitor.prototype.visitBinary = getBinary;\nGetVisitor.prototype.visitFixedSizeBinary = getFixedSizeBinary;\nGetVisitor.prototype.visitDate = getDate;\nGetVisitor.prototype.visitDateDay = getDateDay;\nGetVisitor.prototype.visitDateMillisecond = getDateMillisecond;\nGetVisitor.prototype.visitTimestamp = getTimestamp;\nGetVisitor.prototype.visitTimestampSecond = getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond = getTimestampNanosecond;\nGetVisitor.prototype.visitTime = getTime;\nGetVisitor.prototype.visitTimeSecond = getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond = getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond = getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond = getTimeNanosecond;\nGetVisitor.prototype.visitDecimal = getDecimal;\nGetVisitor.prototype.visitList = getList;\nGetVisitor.prototype.visitStruct = getStruct;\nGetVisitor.prototype.visitUnion = getUnion;\nGetVisitor.prototype.visitDenseUnion = getDenseUnion;\nGetVisitor.prototype.visitSparseUnion = getSparseUnion;\nGetVisitor.prototype.visitDictionary = getDictionary;\nGetVisitor.prototype.visitInterval = getInterval;\nGetVisitor.prototype.visitIntervalDayTime = getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth = getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList = getFixedSizeList;\nGetVisitor.prototype.visitMap = getMap;\n/** @ignore */\nexport const instance = new GetVisitor();\n\n//# sourceMappingURL=get.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullIndexOf(vector, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(vector, fromIndex) {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(vector, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(vector, fromIndex);\n    }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(vector, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullableIterator(vector) {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits(vector.nullBitmap, vector.offset, vector.length, vector, (vec, idx, nullByte, nullBit) => ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null);\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator(vector);\n    }\n    const { type, typeId, length } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && ((typeId === Type.Timestamp) ||\n        (typeId === Type.Int && type.bitWidth !== 64) ||\n        (typeId === Type.Time && type.bitWidth !== 64) ||\n        (typeId === Type.Float && type.precision > 0 /* Precision.HALF */))) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { instance as iteratorVisitor } from './iterator';\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {\n}\n/** @ignore */\nfunction arrayOfVector(vector) {\n    const { type, length, stride } = vector;\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float:\n        case Type.Decimal:\n        case Type.Time:\n        case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)];\n}\nToArrayVisitor.prototype.visitNull = arrayOfVector;\nToArrayVisitor.prototype.visitBool = arrayOfVector;\nToArrayVisitor.prototype.visitInt = arrayOfVector;\nToArrayVisitor.prototype.visitInt8 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16 = arrayOfVector;\nToArrayVisitor.prototype.visitInt32 = arrayOfVector;\nToArrayVisitor.prototype.visitInt64 = arrayOfVector;\nToArrayVisitor.prototype.visitUint8 = arrayOfVector;\nToArrayVisitor.prototype.visitUint16 = arrayOfVector;\nToArrayVisitor.prototype.visitUint32 = arrayOfVector;\nToArrayVisitor.prototype.visitUint64 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64 = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary = arrayOfVector;\nToArrayVisitor.prototype.visitDate = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTime = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal = arrayOfVector;\nToArrayVisitor.prototype.visitList = arrayOfVector;\nToArrayVisitor.prototype.visitStruct = arrayOfVector;\nToArrayVisitor.prototype.visitUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary = arrayOfVector;\nToArrayVisitor.prototype.visitInterval = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList = arrayOfVector;\nToArrayVisitor.prototype.visitMap = arrayOfVector;\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n\n//# sourceMappingURL=toarray.mjs.map\n","/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type) => `Cannot compute the byte width of variable-width column ${type}`;\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    visitNull(____) { return 0; }\n    visitInt(type) { return type.bitWidth / 8; }\n    visitFloat(type) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    visitBinary(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitUtf8(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitBool(____) { return 1 / 8; }\n    visitDecimal(____) { return 16; }\n    visitDate(type) { return (type.unit + 1) * 4; }\n    visitTime(type) { return type.bitWidth / 8; }\n    visitTimestamp(type) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    visitInterval(type) { return (type.unit + 1) * 4; }\n    visitList(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitStruct(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitUnion(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitFixedSizeBinary(type) { return type.byteWidth; }\n    visitFixedSizeList(type) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    visitMap(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitDictionary(type) { return this.visit(type.indices); }\n    visitFields(fields) { return (fields || []).map((field) => this.visit(field.type)); }\n    visitSchema(schema) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n\n//# sourceMappingURL=bytewidth.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    visitNull() { return NullVector; }\n    visitBool() { return BoolVector; }\n    visitInt() { return IntVector; }\n    visitInt8() { return Int8Vector; }\n    visitInt16() { return Int16Vector; }\n    visitInt32() { return Int32Vector; }\n    visitInt64() { return Int64Vector; }\n    visitUint8() { return Uint8Vector; }\n    visitUint16() { return Uint16Vector; }\n    visitUint32() { return Uint32Vector; }\n    visitUint64() { return Uint64Vector; }\n    visitFloat() { return FloatVector; }\n    visitFloat16() { return Float16Vector; }\n    visitFloat32() { return Float32Vector; }\n    visitFloat64() { return Float64Vector; }\n    visitUtf8() { return Utf8Vector; }\n    visitBinary() { return BinaryVector; }\n    visitFixedSizeBinary() { return FixedSizeBinaryVector; }\n    visitDate() { return DateVector; }\n    visitDateDay() { return DateDayVector; }\n    visitDateMillisecond() { return DateMillisecondVector; }\n    visitTimestamp() { return TimestampVector; }\n    visitTimestampSecond() { return TimestampSecondVector; }\n    visitTimestampMillisecond() { return TimestampMillisecondVector; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondVector; }\n    visitTimestampNanosecond() { return TimestampNanosecondVector; }\n    visitTime() { return TimeVector; }\n    visitTimeSecond() { return TimeSecondVector; }\n    visitTimeMillisecond() { return TimeMillisecondVector; }\n    visitTimeMicrosecond() { return TimeMicrosecondVector; }\n    visitTimeNanosecond() { return TimeNanosecondVector; }\n    visitDecimal() { return DecimalVector; }\n    visitList() { return ListVector; }\n    visitStruct() { return StructVector; }\n    visitUnion() { return UnionVector; }\n    visitDenseUnion() { return DenseUnionVector; }\n    visitSparseUnion() { return SparseUnionVector; }\n    visitDictionary() { return DictionaryVector; }\n    visitInterval() { return IntervalVector; }\n    visitIntervalDayTime() { return IntervalDayTimeVector; }\n    visitIntervalYearMonth() { return IntervalYearMonthVector; }\n    visitFixedSizeList() { return FixedSizeListVector; }\n    visitMap() { return MapVector; }\n}\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n\n//# sourceMappingURL=vectorctor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\nimport * as fn from '../util/fn';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder } from '../builder';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n/** @nocollapse */\nVector.new = newVector;\n/** @nocollapse */\nVector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data, ...args) {\n    return new (getVectorConstructor.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nexport function vectorFromValuesWithType(newDataType, input) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    const { 'values': values = [], 'type': type = newDataType(), 'nullValues': nullValues = [null, undefined], } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type })\n        : Vector.from({ nullValues, ...input, type });\n}\nfunction vectorFrom(input) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input };\n    if (isIterable(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    }\n    return (async (chunks) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nBaseVector.prototype.get = function baseVectorGet(index) {\n    return getVisitor.visit(this, index);\n};\nBaseVector.prototype.set = function baseVectorSet(index, value) {\n    return setVisitor.visit(this, index, value);\n};\nBaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\nBaseVector.prototype.toArray = function baseVectorToArray() {\n    return toArrayVisitor.visit(this);\n};\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n    return byteWidthVisitor.visit(this.type);\n};\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n    return iteratorVisitor.visit(this);\n};\nBaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n    const VectorCtor = getVectorConstructor.visit(typeId);\n    VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n    VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n    return function () { return visit(this.type); };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n    return function (i) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n    return function (i, a) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Column } from './column';\nimport { Schema } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { RecordBatchReader } from './ipc/reader';\nimport { Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Chunked, StructVector } from './vector/index';\nexport class Table extends Chunked {\n    constructor(...args) {\n        let schema = null;\n        if (args[0] instanceof Schema) {\n            schema = args.shift();\n        }\n        let chunks = selectArgs(RecordBatch, args);\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n        super(new Struct(schema.fields), chunks);\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n    /** @nocollapse */\n    static empty(schema = new Schema([])) { return new Table(schema, []); }\n    /** @nocollapse */\n    static from(input) {\n        if (!input) {\n            return Table.empty();\n        }\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable(input)\n                : isAsyncIterable(input['values']) ? tableFromAsyncIterable(input)\n                    : null;\n            if (table !== null) {\n                return table;\n            }\n        }\n        let reader = RecordBatchReader.from(input);\n        if (isPromise(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n    /** @nocollapse */\n    static async fromAsync(source) {\n        return await Table.from(source);\n    }\n    /** @nocollapse */\n    static fromStruct(vector) {\n        return Table.new(vector.data.childData, vector.type.children);\n    }\n    /** @nocollapse */\n    static new(...cols) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n    get schema() { return this._schema; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get numCols() { return this._numChildren; }\n    clone(chunks = this._chunks) {\n        return new Table(this._schema, chunks);\n    }\n    getColumn(name) {\n        return this.getColumnAt(this.getColumnIndex(name));\n    }\n    getColumnAt(index) {\n        return this.getChildAt(index);\n    }\n    getColumnIndex(name) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let field, child;\n        const fields = this._schema.fields;\n        const columns = this._children || (this._children = []);\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n    // @ts-ignore\n    serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    count() {\n        return this._length;\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    assign(other) {\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) => (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))),\n            ...indices.map((i) => other.getColumnAt(i))\n        ].filter(Boolean);\n        return new Table(...distributeVectorsIntoRecordBatches(schema, columns));\n    }\n}\nfunction tableFromIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input));\n    }\n    return null;\n}\nfunction tableFromAsyncIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n\n//# sourceMappingURL=table.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { StructVector } from './vector/index';\nexport class RecordBatch extends StructVector {\n    constructor(...args) {\n        let data;\n        let schema = args[0];\n        let children;\n        if (args[1] instanceof Data) {\n            [, data, children] = args;\n        }\n        else {\n            const fields = schema.fields;\n            const [, length, childData] = args;\n            data = Data.Struct(new Struct(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n    /** @nocollapse */\n    static from(options) {\n        if (isIterable(options['values'])) {\n            return Table.from(options);\n        }\n        return Table.from(options);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        const [fs, xs] = selectFieldArgs(args);\n        const vs = xs.filter((x) => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema(fs), vs.map((x) => x.data)));\n    }\n    clone(data, children = this._children) {\n        return new RecordBatch(this._schema, data, children);\n    }\n    concat(...others) {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n    get schema() { return this._schema; }\n    get numCols() { return this._schema.fields.length; }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch(schema, this.length, childData);\n    }\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    constructor() {\n        super(...arguments);\n        this.dictionaries = new Map();\n    }\n    static collect(batch) {\n        return new DictionaryCollector().visit(batch.data, new Struct(batch.schema.fields)).dictionaries;\n    }\n    visit(data, type) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        }\n        else {\n            data.childData.forEach((child, i) => this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    visitDictionary(data, type) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport streamAdapters from '../io/adapters';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ITERATOR_DONE, ReadableInterop, } from '../io/interfaces';\nimport { MessageReader, AsyncMessageReader, JSONMessageReader, checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding } from './message';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isArrowJSON, isFileHandle, isFetchResponse, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\nexport class RecordBatchReader extends ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return streamAdapters.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return streamAdapters.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if (isArrowJSON(source)) {\n            return fromArrowJSON(source);\n        }\n        else if (isFileHandle(source)) {\n            return fromFileHandle(source);\n        }\n        else if (isPromise(source)) {\n            return (async () => await RecordBatchReader.from(await source))();\n        }\n        else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream(new AsyncByteStream(source));\n        }\n        return fromByteStream(new ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable(source) || isIteratorResult(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nexport class RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    async *[Symbol.asyncIterator]() { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        return new RecordBatch(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            return (dictionary && isDelta ? dictionary.concat(Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0]));\n        }\n        return dictionary;\n    }\n    _loadVectors(header, body, types) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    async open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    async throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return await this.return();\n    }\n    async _readNextMessageAndValidate(type) {\n        return await this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    async open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    async readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            await this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    async _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    async _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            await this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nasync function* readAllAsync(source) {\n    const reader = await RecordBatchReader.from(source);\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do {\n                yield reader;\n            } while (!(await reader.reset().open()).closed);\n        }\n    }\n    finally {\n        await reader.cancel();\n    }\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nasync function fromAsyncByteStream(source) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(async function* () { }()));\n}\n/** @ignore */\nasync function fromFileHandle(source) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n    return new BuilderTransform(options);\n}\n/** @ignore */\nexport class BuilderTransform {\n    constructor(options) {\n        // Access properties by string indexers to defeat closure compiler\n        this._numChunks = 0;\n        this._finished = false;\n        this._bufferedSize = 0;\n        const { ['readableStrategy']: readableStrategy, ['writableStrategy']: writableStrategy, ['queueingStrategy']: queueingStrategy = 'count', ...builderOptions } = options;\n        this._controller = null;\n        this._builder = Builder.new(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n        this['readable'] = new ReadableStream({\n            ['cancel']: () => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n    _writeValueAndReturnChunkSize(value) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n    _maybeFlush(builder, controller) {\n        if (controller === null) {\n            return;\n        }\n        if (this._bufferedSize >= controller.desiredSize) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n    _enqueue(controller, chunk) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n/** @ignore */ const chunkLength = (chunk) => chunk.length;\n/** @ignore */ const chunkByteLength = (chunk) => chunk.byteLength;\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DictionaryVector } from '../vector/dictionary';\n/** @ignore */\nexport class Value {\n    eq(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new Equals(this, other);\n    }\n    le(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new LTeq(this, other);\n    }\n    ge(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new GTeq(this, other);\n    }\n    lt(other) {\n        return new Not(this.ge(other));\n    }\n    gt(other) {\n        return new Not(this.le(other));\n    }\n    ne(other) {\n        return new Not(this.eq(other));\n    }\n}\n/** @ignore */\nexport class Literal extends Value {\n    constructor(v) {\n        super();\n        this.v = v;\n    }\n}\n/** @ignore */\nexport class Col extends Value {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    bind(batch) {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) {\n                throw new Error(`Failed to bind Col \"${this.name}\"`);\n            }\n        }\n        const vec = this.vector = batch.getChildAt(this.colidx);\n        return (idx) => vec.get(idx);\n    }\n}\n/** @ignore */\nexport class Predicate {\n    and(...expr) { return new And(this, ...expr); }\n    or(...expr) { return new Or(this, ...expr); }\n    not() { return new Not(this); }\n}\n/** @ignore */\nexport class ComparisonPredicate extends Predicate {\n    constructor(left, right) {\n        super();\n        this.left = left;\n        this.right = right;\n    }\n    bind(batch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindLitCol(batch, this.left, this.right);\n            }\n        }\n        else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindColCol(batch, this.left, this.right);\n            }\n        }\n    }\n}\n/** @ignore */\nexport class CombinationPredicate extends Predicate {\n    constructor(...children) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\nCombinationPredicate.prototype.children = Object.freeze([]); // freeze for safety\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ands\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.every((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ors\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.some((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v == right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, batch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key;\n            const vector = col.vector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            }\n            else {\n                key = this.lastKey;\n            }\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            }\n            else {\n                return (idx) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        }\n        else {\n            return (idx, cols) => col_func(idx, cols) == lit.v;\n        }\n    }\n    _bindLitCol(batch, lit, col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v <= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) <= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v <= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v >= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) >= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v >= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(child) {\n        super();\n        this.child = child;\n    }\n    bind(batch) {\n        const func = this.child.bind(batch);\n        return (idx, batch) => !func(idx, batch);\n    }\n}\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(next, bind_) {\n        super();\n        this.next = next;\n        this.bind_ = bind_;\n    }\n    bind(batch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\nexport function lit(v) { return new Literal(v); }\nexport function col(n) { return new Col(n); }\nexport function and(...p) { return new And(...p); }\nexport function or(...p) { return new Or(...p); }\nexport function custom(next, bind) {\n    return new CustomPredicate(next, bind);\n}\n\n//# sourceMappingURL=predicate.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { DataType } from '../type';\nTable.prototype.countBy = function (name) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function (next, bind) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function (next, bind) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function (predicate) { return new DataFrame(this.chunks).filter(predicate); };\nexport class DataFrame extends Table {\n    filter(predicate) {\n        return new FilteredDataFrame(this.chunks, predicate);\n    }\n    scan(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    countBy(name) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n/** @ignore */\nexport class CountByResult extends Table {\n    constructor(values, counts) {\n        const schema = new Schema([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch(schema, counts.length, [values, counts]));\n    }\n    toJSON() {\n        const values = this.getColumnAt(0);\n        const counts = this.getColumnAt(1);\n        const result = {};\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n/** @ignore */\nexport class FilteredDataFrame extends DataFrame {\n    constructor(batches, predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    scan(next, bind) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    count() {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    ++sum;\n                }\n            }\n        }\n        return sum;\n    }\n    *[Symbol.iterator]() {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    yield batch.get(index);\n                }\n            }\n        }\n    }\n    filter(predicate) {\n        return new FilteredDataFrame(this._chunks, this._predicate.and(predicate));\n    }\n    countBy(name) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n//# sourceMappingURL=dataframe.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType, Data, DataType, Null, Bool, Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64, Float, Float16, Float32, Float64, Utf8, Binary, FixedSizeBinary, Date_, DateDay, DateMillisecond, Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond, Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond, Decimal, List, Struct, Union, DenseUnion, SparseUnion, Dictionary, Interval, IntervalDayTime, IntervalYearMonth, FixedSizeList, Map_, Table, Column, Schema, Field, Visitor, Vector, BaseVector, BinaryVector, BoolVector, Chunked, DateVector, DateDayVector, DateMillisecondVector, DecimalVector, DictionaryVector, FixedSizeBinaryVector, FixedSizeListVector, FloatVector, Float16Vector, Float32Vector, Float64Vector, IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector, IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, ListVector, MapVector, NullVector, StructVector, TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector, TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector, UnionVector, DenseUnionVector, SparseUnionVector, Utf8Vector, ByteStream, AsyncByteStream, AsyncByteQueue, RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader, RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter, MessageReader, AsyncMessageReader, JSONMessageReader, Message, RecordBatch, DataFrame, FilteredDataFrame, CountByResult, predicate, util, Builder, BinaryBuilder, BoolBuilder, DateBuilder, DateDayBuilder, DateMillisecondBuilder, DecimalBuilder, DictionaryBuilder, FixedSizeBinaryBuilder, FixedSizeListBuilder, FloatBuilder, Float16Builder, Float32Builder, Float64Builder, IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder, IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder, ListBuilder, MapBuilder, NullBuilder, StructBuilder, TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder, TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder, UnionBuilder, DenseUnionBuilder, SparseUnionBuilder, Utf8Builder, } from './Arrow';\n\n//# sourceMappingURL=Arrow.dom.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../../util/buffer';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n/** @ignore */\nexport function toDOMStream(source, options) {\n    if (isAsyncIterable(source)) {\n        return asyncIterableAsReadableDOMStream(source, options);\n    }\n    if (isIterable(source)) {\n        return iterableAsReadableDOMStream(source, options);\n    }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    async function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=iterable.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n    const queue = new AsyncByteQueue();\n    let reader = null;\n    const readable = new ReadableStream({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n    async function open() {\n        return await (await RecordBatchReader.from(queue)).open(readableStrategy);\n    }\n    async function next(controller, reader) {\n        let size = controller.desiredSize;\n        let r = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteStream } from '../../io/stream';\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n    const writer = new this(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n    async function next(controller) {\n        let buf = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=writer.mjs.map\n","/**\n * @license\n * Copyright 2018-2019 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nexport class ArrowTable {\n    constructor(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        this.getCell = (rowIndex, columnIndex) => {\n            const isBlankCell = rowIndex < this.headerRows && columnIndex < this.headerColumns;\n            const isIndexCell = rowIndex >= this.headerRows && columnIndex < this.headerColumns;\n            const isColumnsCell = rowIndex < this.headerRows && columnIndex >= this.headerColumns;\n            if (isBlankCell) {\n                const classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\",\n                };\n            }\n            else if (isColumnsCell) {\n                const dataColumnIndex = columnIndex - this.headerColumns;\n                const classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex,\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: this.getContent(this.columnsTable, dataColumnIndex, rowIndex),\n                };\n            }\n            else if (isIndexCell) {\n                const dataRowIndex = rowIndex - this.headerRows;\n                const classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex,\n                ];\n                return {\n                    type: \"index\",\n                    id: `T_${this.uuid}level${columnIndex}_row${dataRowIndex}`,\n                    classNames: classNames.join(\" \"),\n                    content: this.getContent(this.indexTable, dataRowIndex, columnIndex),\n                };\n            }\n            else {\n                const dataRowIndex = rowIndex - this.headerRows;\n                const dataColumnIndex = columnIndex - this.headerColumns;\n                const classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex,\n                ];\n                const content = this.styler\n                    ? this.getContent(this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : this.getContent(this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: `T_${this.uuid}row${dataRowIndex}_col${dataColumnIndex}`,\n                    classNames: classNames.join(\" \"),\n                    content,\n                };\n            }\n        };\n        this.getContent = (table, rowIndex, columnIndex) => {\n            const column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            const columnTypeId = this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.get(\"caption\"),\n                displayValuesTable: Table.from(styler.get(\"displayValues\")),\n                styles: styler.get(\"styles\"),\n                uuid: styler.get(\"uuid\"),\n            }\n            : undefined;\n    }\n    get rows() {\n        return this.indexTable.length + this.columnsTable.numCols;\n    }\n    get columns() {\n        return this.indexTable.numCols + this.columnsTable.length;\n    }\n    get headerRows() {\n        return this.rows - this.dataRows;\n    }\n    get headerColumns() {\n        return this.columns - this.dataColumns;\n    }\n    get dataRows() {\n        return this.dataTable.length;\n    }\n    get dataColumns() {\n        return this.dataTable.numCols;\n    }\n    get uuid() {\n        return this.styler && this.styler.uuid;\n    }\n    get caption() {\n        return this.styler && this.styler.caption;\n    }\n    get styles() {\n        return this.styler && this.styler.styles;\n    }\n    get table() {\n        return this.dataTable;\n    }\n    get index() {\n        return this.indexTable;\n    }\n    get columnTable() {\n        return this.columnsTable;\n    }\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    getColumnTypeId(table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    }\n    nanosToDate(nanos) {\n        return new Date(nanos / 1e6);\n    }\n}\n","/**\n * @license\n * Copyright 2018-2020 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nexport class Streamlit {\n}\n/**\n * The Streamlit component API version we're targetting.\n * There's currently only 1!\n */\nStreamlit.API_VERSION = 1;\nStreamlit.RENDER_EVENT = \"streamlit:render\";\n/** Dispatches events received from Streamlit. */\nStreamlit.events = new EventTarget();\nStreamlit.registeredMessageListener = false;\n/**\n * Tell Streamlit that the component is ready to start receiving data.\n * Streamlit will defer emitting RENDER events until it receives the\n * COMPONENT_READY message.\n */\nStreamlit.setComponentReady = () => {\n    if (!Streamlit.registeredMessageListener) {\n        // Register for message events if we haven't already\n        window.addEventListener(\"message\", Streamlit.onMessageEvent);\n        Streamlit.registeredMessageListener = true;\n    }\n    Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n        apiVersion: Streamlit.API_VERSION,\n    });\n};\n/**\n * Report the component's height to Streamlit.\n * This should be called every time the component changes its DOM - that is,\n * when it's first loaded, and any time it updates.\n */\nStreamlit.setFrameHeight = (height) => {\n    if (height === undefined) {\n        // `height` is optional. If undefined, it defaults to scrollHeight,\n        // which is the entire height of the element minus its border,\n        // scrollbar, and margin.\n        height = document.body.scrollHeight;\n    }\n    if (height === Streamlit.lastFrameHeight) {\n        // Don't bother updating if our height hasn't changed.\n        return;\n    }\n    Streamlit.lastFrameHeight = height;\n    Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height });\n};\n/**\n * Set the component's value. This value will be returned to the Python\n * script, and the script will be re-run.\n *\n * For example:\n *\n * JavaScript:\n * Streamlit.setComponentValue(\"ahoy!\")\n *\n * Python:\n * value = st.my_component(...)\n * st.write(value) # -> \"ahoy!\"\n *\n * The value must be serializable into JSON.\n */\nStreamlit.setComponentValue = (value) => {\n    Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, { value });\n};\n/** Receive a ForwardMsg from the Streamlit app */\nStreamlit.onMessageEvent = (event) => {\n    const type = event.data[\"type\"];\n    switch (type) {\n        case Streamlit.RENDER_EVENT:\n            Streamlit.onRenderMessage(event.data);\n            break;\n    }\n};\n/**\n * Handle an untyped Streamlit render event and redispatch it as a\n * StreamlitRenderEvent.\n */\nStreamlit.onRenderMessage = (data) => {\n    let args = data[\"args\"];\n    if (args == null) {\n        console.error(`Got null args in onRenderMessage. This should never happen`);\n        args = {};\n    }\n    // Parse our dataframe arguments with arrow, and merge them into our args dict\n    const dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n        ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n        : {};\n    args = {\n        ...args,\n        ...dataframeArgs,\n    };\n    const disabled = Boolean(data[\"disabled\"]);\n    // Dispatch a render event!\n    const eventData = { disabled, args };\n    const event = new CustomEvent(Streamlit.RENDER_EVENT, {\n        detail: eventData,\n    });\n    Streamlit.events.dispatchEvent(event);\n};\nStreamlit.argsDataframeToObject = (argsDataframe) => {\n    const argsDataframeArrow = argsDataframe.map(({ key, value }) => [key, Streamlit.toArrowTable(value)]);\n    return Object.fromEntries(argsDataframeArrow);\n};\nStreamlit.toArrowTable = (df) => {\n    const { data, index, columns } = df.data;\n    return new ArrowTable(data, index, columns);\n};\n/** Post a message to the Streamlit app. */\nStreamlit.sendBackMsg = (type, data) => {\n    window.parent.postMessage({\n        isStreamlitMessage: true,\n        type: type,\n        ...data,\n    }, \"*\");\n};\n","<script lang=\"ts\">\n  import { onMount, afterUpdate, onDestroy } from \"svelte\";\n  import { Streamlit } from \"./streamlit\";\n  import type { RenderData } from \"./streamlit\";\n\n  /**\n   * Custom Streamlit component\n   */\n  export let component: any;\n\n  /**\n   * Set to false if you want `args` (the named dictionary of arguments passed\n   * from Python) to be passed as a dictionary to your component.\n   *\n   * Default is `true`.\n   */\n  export let spreadArgs: boolean = true;\n\n  // State\n  let renderData: RenderData;\n\n  //  Props passed to custom Streamlit components.\n  /** Named dictionary of arguments passed from Python.\n   *  Arguments will be passed directly if `spreadArgs=true`\n   */\n  let args: any;\n\n  /** The component's width. */\n  let width: number;\n\n  /**\n   * True if the component should be disabled.\n   * All components get disabled while the app is being re-run,\n   * and become re-enabled when the re-run has finished.\n   */\n  let disabled: boolean;\n\n  /**\n   * Streamlit is telling this component to redraw.\n   * We save the render data in State, so that it can be passed to the\n   * component.\n   */\n  const onRenderEvent = (event: Event): void => {\n    // Update our state with the newest render data\n    renderData = (event as CustomEvent<RenderData>).detail;\n    args = renderData.args;\n    disabled = renderData.disabled;\n  };\n\n  onMount((): void => {\n    // Set up event listeners, and signal to Streamlit that we're ready.\n    // We won't render the component until we receive the first RENDER_EVENT.\n    Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\n    Streamlit.setComponentReady();\n  });\n\n  onDestroy((): void => {\n    // Remove our `onRender` handler to Streamlit's render event.\n    Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\n  });\n</script>\n\n<svelte:window bind:innerWidth={width} />\n<!-- Don't render until we've gotten our first RENDER_EVENT from Streamlit. -->\n{#if renderData}\n  {#if spreadArgs}\n    <svelte:component this={component} {...args} {disabled} {width} />\n  {:else}\n    <svelte:component this={component} {args} {disabled} {width} />\n  {/if}\n{/if}\n","<script lang=\"ts\">\n  export let words: string;\n  export let label: string;\n  export let id: number;\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  const colors = {\n    \"Droughts\\u2588Areas Affected\": \"#7aecec\",\n    \"Droughts\\u2588Influenced People\": \"#bfeeb7\",\n    \"Droughts\\u2588Damaged Crops & Livestock\": \"#feca74\",\n    \"Droughts\\u2588Date\": \"#ff9561\",\n    \"Droughts\\u2588Cause\": \"#999cff\",\n    \"Droughts\\u2588Production Cuts\": \"#c887fb\",\n    \"Droughts\\u2588Related Rivers or Lakes\": \"#9cc9cc\",\n    \"Droughts\\u2588Economic Loss\": \"#ffeb80\",\n    \"Droughts\\u2588The Worst-Hit Area\": \"#ff8197\",\n    \"Tsunamis\\u2588Tsunamis\": \"#7aecec\",\n    \"Tsunamis\\u2588Number of Rescued People\": \"#bfeeb7\",\n    \"Tsunamis\\u2588Casualties and Losses\": \"#feca74\",\n    \"Tsunamis\\u2588Aid Agency\": \"#ff9561\",\n    \"Tsunamis\\u2588Number of Destroyed Building\": \"#999cff\",\n    \"Tsunamis\\u2588Warning Device\": \"#c887fb\",\n    \"Tsunamis\\u2588Date\": \"#9cc9cc\",\n    \"Tsunamis\\u2588People/Organization who predicted the disaster\": \"#ffeb80\",\n    \"Tsunamis\\u2588Cause\": \"#ff8197\",\n    \"Tsunamis\\u2588Magnitude(Tsunami heights)\": \"#f0d0ff\",\n    \"Tsunamis\\u2588Area Affected\": \"#00e1d9\",\n    \"Tsunamis\\u2588Economic Loss\": \"#e4e7d2\",\n    \"Tsunamis\\u2588Tsunami Warning Level\": \"#33ffd4\",\n    \"Tsunamis\\u2588Aid Supplies/Amount\": \"#99ff33\",\n    \"New Wonders in Nature\\u2588Live Broadcast Platform\": \"#7aecec\",\n    \"New Wonders in Nature\\u2588Spectacle Start Time\": \"#bfeeb7\",\n    \"New Wonders in Nature\\u2588Best Way to Shoot\": \"#feca74\",\n    \"New Wonders in Nature\\u2588Spectacle Duration\": \"#ff9561\",\n    \"New Wonders in Nature\\u2588Forecasting Agency\": \"#999cff\",\n    \"New Wonders in Nature\\u2588Cause\": \"#c887fb\",\n    \"New Wonders in Nature\\u2588Spectacle End Time\": \"#9cc9cc\",\n    \"New Wonders in Nature\\u2588Spectacle Location\": \"#ffeb80\",\n    \"New Wonders in Nature\\u2588Types of the Spectacle\": \"#ff8197\",\n    \"Floods\\u2588Casualties and Losses\": \"#7aecec\",\n    \"Floods\\u2588Number of Rescued People\": \"#bfeeb7\",\n    \"Floods\\u2588Aid Agency\": \"#feca74\",\n    \"Floods\\u2588Maximum Rainfall\": \"#ff9561\",\n    \"Floods\\u2588Affected Areas\": \"#999cff\",\n    \"Floods\\u2588Water Level\": \"#c887fb\",\n    \"Floods\\u2588Date\": \"#9cc9cc\",\n    \"Floods\\u2588Cause\": \"#ffeb80\",\n    \"Floods\\u2588Number of Damaged Houses\": \"#ff8197\",\n    \"Floods\\u2588Missings\": \"#f0d0ff\",\n    \"Floods\\u2588Number of Evacuated People\": \"#00e1d9\",\n    \"Floods\\u2588Related Rivers or Lakes\": \"#e4e7d2\",\n    \"Floods\\u2588Temporary Settlement\": \"#33ffd4\",\n    \"Floods\\u2588Economic Loss\": \"#99ff33\",\n    \"Floods\\u2588Disaster-Stricken Farmland\": \"#ff9933\",\n    \"Floods\\u2588Aid Supplies/Amount\": \"#ffff33\",\n    \"Air Crash\\u2588Location\": \"#7aecec\",\n    \"Air Crash\\u2588Aircraft Agency\": \"#bfeeb7\",\n    \"Air Crash\\u2588Casualties and Losses\": \"#feca74\",\n    \"Air Crash\\u2588Service Years\": \"#ff9561\",\n    \"Air Crash\\u2588Scheduled Landing Place\": \"#999cff\",\n    \"Air Crash\\u2588Alternate Landing Place\": \"#c887fb\",\n    \"Air Crash\\u2588Survivors\": \"#9cc9cc\",\n    \"Air Crash\\u2588Taking-off Place\": \"#ffeb80\",\n    \"Air Crash\\u2588Flight No.\": \"#ff8197\",\n    \"Air Crash\\u2588Date\": \"#f0d0ff\",\n    \"Air Crash\\u2588Cause\": \"#00e1d9\",\n    \"Air Crash\\u2588Accident Investigator\": \"#e4e7d2\",\n    \"Air Crash\\u2588Passengers\": \"#33ffd4\",\n    \"Air Crash\\u2588Crew\": \"#99ff33\",\n    \"Organization Established\\u2588Location\": \"#7aecec\",\n    \"Organization Established\\u2588Organization\": \"#bfeeb7\",\n    \"Organization Established\\u2588Registered Capital\": \"#feca74\",\n    \"Organization Established\\u2588Head of Institution\": \"#ff9561\",\n    \"Organization Established\\u2588Spokenmen\": \"#999cff\",\n    \"Organization Established\\u2588Date\": \"#c887fb\",\n    \"Organization Established\\u2588Cause\": \"#9cc9cc\",\n    \"Fire\\u2588Location\": \"#7aecec\",\n    \"Fire\\u2588Number of Rescued People\": \"#bfeeb7\",\n    \"Fire\\u2588Casualties and Losses\": \"#feca74\",\n    \"Fire\\u2588Aid Agency\": \"#ff9561\",\n    \"Fire\\u2588Date\": \"#999cff\",\n    \"Fire\\u2588Cause\": \"#c887fb\",\n    \"Fire\\u2588Magnitude\": \"#9cc9cc\",\n    \"Fire\\u2588Temporary Settlement\": \"#ffeb80\",\n    \"Fire\\u2588Number of Damaged Houses\": \"#ff8197\",\n    \"Fire\\u2588Economic Loss\": \"#f0d0ff\",\n    \"Fire\\u2588Aid Supplies/Amount\": \"#00e1d9\",\n    \"Election\\u2588Location\": \"#7aecec\",\n    \"Election\\u2588The Final Seats Result\": \"#bfeeb7\",\n    \"Election\\u2588Candidates and their Political Parties\": \"#feca74\",\n    \"Election\\u2588Turnout(who win who lost)\": \"#ff9561\",\n    \"Election\\u2588People Casting Key Votes\": \"#999cff\",\n    \"Election\\u2588Candidate Scandal(Allegations of fraud, etc.)\": \"#c887fb\",\n    \"Election\\u2588Date\": \"#9cc9cc\",\n    \"Election\\u2588The Final Votes and Percentages\": \"#ffeb80\",\n    \"Election\\u2588Electoral System\": \"#ff8197\",\n    \"Election\\u2588Election Goal\": \"#f0d0ff\",\n    \"Election\\u2588Voting method\": \"#00e1d9\",\n    \"Election\\u2588Election Name\": \"#e4e7d2\",\n    \"CommitCrime - Release\\u2588Release Time\": \"#7aecec\",\n    \"CommitCrime - Release\\u2588Charged Crime\": \"#bfeeb7\",\n    \"CommitCrime - Release\\u2588Judge\": \"#feca74\",\n    \"CommitCrime - Release\\u2588Released People\": \"#ff9561\",\n    \"CommitCrime - Release\\u2588Jail Time\": \"#999cff\",\n    \"CommitCrime - Release\\u2588Sentencing Location\": \"#c887fb\",\n    \"CommitCrime - Release\\u2588Release Reason\": \"#9cc9cc\",\n    \"CommitCrime - Release\\u2588Prison Term\": \"#ffeb80\",\n    \"CommitCrime - Release\\u2588Defense Lawyer\": \"#ff8197\",\n    \"Earthquakes\\u2588Number of Rescued People\": \"#7aecec\",\n    \"Earthquakes\\u2588Casualties and Losses\": \"#bfeeb7\",\n    \"Earthquakes\\u2588Aid Agency\": \"#feca74\",\n    \"Earthquakes\\u2588Aid Supplies/Amount\": \"#ff9561\",\n    \"Earthquakes\\u2588Number of Destroyed Building\": \"#999cff\",\n    \"Earthquakes\\u2588Epicenter\": \"#c887fb\",\n    \"Earthquakes\\u2588Date\": \"#9cc9cc\",\n    \"Earthquakes\\u2588Affected Area\": \"#ffeb80\",\n    \"Earthquakes\\u2588Magnitude\": \"#ff8197\",\n    \"Earthquakes\\u2588Number of Aftershocks\": \"#f0d0ff\",\n    \"Earthquakes\\u2588Number of Evacuated People\": \"#00e1d9\",\n    \"Earthquakes\\u2588Temporary Settlement\": \"#e4e7d2\",\n    \"Earthquakes\\u2588Economic Loss\": \"#33ffd4\",\n    \"Earthquakes\\u2588Number of Trapped People\": \"#99ff33\",\n    \"Earthquakes\\u2588Number of Rebuilding House\": \"#ff9933\",\n    \"Military Excercise\\u2588Location\": \"#7aecec\",\n    \"Military Excercise\\u2588Army\": \"#bfeeb7\",\n    \"Military Excercise\\u2588Military Exercise\": \"#feca74\",\n    \"Military Excercise\\u2588Scale\": \"#ff9561\",\n    \"Military Excercise\\u2588Date\": \"#999cff\",\n    \"Military Excercise\\u2588Projects\": \"#c887fb\",\n    \"Military Excercise\\u2588Participating Countries\": \"#9cc9cc\",\n    \"Military Excercise\\u2588Commanders and their Position\": \"#ffeb80\",\n    \"Military Excercise\\u2588Weapon and Equippment\": \"#ff8197\",\n    \"Military Excercise\\u2588Goal\": \"#f0d0ff\",\n    \"Famous Person - Marriage\\u2588Invited Person\": \"#7aecec\",\n    \"Famous Person - Marriage\\u2588Wife\": \"#bfeeb7\",\n    \"Famous Person - Marriage\\u2588Cost\": \"#feca74\",\n    \"Famous Person - Marriage\\u2588Date\": \"#ff9561\",\n    \"Famous Person - Marriage\\u2588Wedding Venue\": \"#999cff\",\n    \"Famous Person - Marriage\\u2588Husband\": \"#c887fb\",\n    \"Famous Person - Marriage\\u2588Wedding Dress Designer\": \"#9cc9cc\",\n    \"Famous Person - Marriage\\u2588How Many Times Get Married\": \"#ffeb80\",\n    \"Famous Person - Marriage\\u2588Witness\": \"#ff8197\",\n    \"Mudslides\\u2588Number of Rescued People\": \"#7aecec\",\n    \"Mudslides\\u2588Casualties and Losses\": \"#bfeeb7\",\n    \"Mudslides\\u2588Aid Agency\": \"#feca74\",\n    \"Mudslides\\u2588Affected Areas\": \"#ff9561\",\n    \"Mudslides\\u2588Number of Destroyed Building\": \"#999cff\",\n    \"Mudslides\\u2588Influence People\": \"#c887fb\",\n    \"Mudslides\\u2588Date\": \"#9cc9cc\",\n    \"Mudslides\\u2588Cause\": \"#ffeb80\",\n    \"Mudslides\\u2588Missings\": \"#ff8197\",\n    \"Mudslides\\u2588Number of Evacuated People\": \"#f0d0ff\",\n    \"Mudslides\\u2588Temporary Settlement\": \"#00e1d9\",\n    \"Mudslides\\u2588Economic Loss\": \"#e4e7d2\",\n    \"Mudslides\\u2588Aid Supplies/Amount\": \"#33ffd4\",\n    \"New Achievements in Aerospace\\u2588Launch Date\": \"#7aecec\",\n    \"New Achievements in Aerospace\\u2588Launch Site\": \"#bfeeb7\",\n    \"New Achievements in Aerospace\\u2588Spacecraft\": \"#feca74\",\n    \"New Achievements in Aerospace\\u2588Research Agency\": \"#ff9561\",\n    \"New Achievements in Aerospace\\u2588Launch Country\": \"#999cff\",\n    \"New Achievements in Aerospace\\u2588Astronauts\": \"#c887fb\",\n    \"New Achievements in Aerospace\\u2588Mission Duration\": \"#9cc9cc\",\n    \"New Achievements in Aerospace\\u2588Cooperative Agency\": \"#ffeb80\",\n    \"New Achievements in Aerospace\\u2588Launch Result\": \"#ff8197\",\n    \"New Achievements in Aerospace\\u2588Spokeswoman/Spokesman\": \"#f0d0ff\",\n    \"New Achievements in Aerospace\\u2588Carrier Rocket\": \"#00e1d9\",\n    \"New Achievements in Aerospace\\u2588Spacecraft Mission\": \"#e4e7d2\",\n    \"Shipwreck\\u2588Location\": \"#7aecec\",\n    \"Shipwreck\\u2588Casualties and Losses\": \"#bfeeb7\",\n    \"Shipwreck\\u2588Lost Contact Time\": \"#feca74\",\n    \"Shipwreck\\u2588Hull Discovery Time\": \"#ff9561\",\n    \"Shipwreck\\u2588Survivors\": \"#999cff\",\n    \"Shipwreck\\u2588Date\": \"#c887fb\",\n    \"Shipwreck\\u2588Shipwreck Reason\": \"#9cc9cc\",\n    \"Shipwreck\\u2588Rescue Organizer\": \"#ffeb80\",\n    \"Shipwreck\\u2588Missings\": \"#ff8197\",\n    \"Shipwreck\\u2588Accident Investigator\": \"#f0d0ff\",\n    \"Shipwreck\\u2588Ship No.\": \"#00e1d9\",\n    \"Shipwreck\\u2588Rescue Tool or Method\": \"#e4e7d2\",\n    \"Shipwreck\\u2588State of the Hull\": \"#33ffd4\",\n    \"Shipwreck\\u2588Rescue Start Time\": \"#99ff33\",\n    \"Shipwreck\\u2588Hull Location\": \"#ff9933\",\n    \"Shipwreck\\u2588Ship Agency\": \"#ffff33\",\n    \"Train Collisions\\u2588Location\": \"#7aecec\",\n    \"Train Collisions\\u2588Train Agency\": \"#bfeeb7\",\n    \"Train Collisions\\u2588Casualties and Losses\": \"#feca74\",\n    \"Train Collisions\\u2588Survivors\": \"#ff9561\",\n    \"Train Collisions\\u2588Date\": \"#999cff\",\n    \"Train Collisions\\u2588Cause\": \"#c887fb\",\n    \"Train Collisions\\u2588Economic Loss\": \"#9cc9cc\",\n    \"Train Collisions\\u2588Missings\": \"#ffeb80\",\n    \"Train Collisions\\u2588Accident Investigator\": \"#ff8197\",\n    \"Train Collisions\\u2588Train No.\": \"#f0d0ff\",\n    \"Train Collisions\\u2588Attending Hospital\": \"#00e1d9\",\n    \"Famine\\u2588Aid Agency\": \"#7aecec\",\n    \"Famine\\u2588Affected Areas\": \"#bfeeb7\",\n    \"Famine\\u2588Casualities and Losses\": \"#feca74\",\n    \"Famine\\u2588Date\": \"#ff9561\",\n    \"Famine\\u2588Cause\": \"#999cff\",\n    \"Famine\\u2588Number of Influenced People\": \"#c887fb\",\n    \"Famine\\u2588Economic Loss\": \"#9cc9cc\",\n    \"Famine\\u2588Solution\": \"#ffeb80\",\n    \"Famine\\u2588Aid Supplies/Amount\": \"#ff8197\",\n    \"Sports Competition\\u2588Location\": \"#7aecec\",\n    \"Sports Competition\\u2588MVP\": \"#bfeeb7\",\n    \"Sports Competition\\u2588Champions\": \"#feca74\",\n    \"Sports Competition\\u2588End Time\": \"#ff9561\",\n    \"Sports Competition\\u2588Postpone Reason\": \"#999cff\",\n    \"Sports Competition\\u2588Postpone Time\": \"#c887fb\",\n    \"Sports Competition\\u2588Lasting Time\": \"#9cc9cc\",\n    \"Sports Competition\\u2588Score\": \"#ffeb80\",\n    \"Sports Competition\\u2588Contest Participant\": \"#ff8197\",\n    \"Sports Competition\\u2588Start Time\": \"#f0d0ff\",\n    \"Sports Competition\\u2588Game Name\": \"#00e1d9\",\n    \"Sports Competition\\u2588Host Country\": \"#e4e7d2\",\n    \"Sports Competition\\u2588Competition Items\": \"#33ffd4\",\n    \"Strike\\u2588Economy Loss\": \"#7aecec\",\n    \"Strike\\u2588Duration\": \"#bfeeb7\",\n    \"Strike\\u2588Strike Agency\": \"#feca74\",\n    \"Strike\\u2588Strikers\": \"#ff9561\",\n    \"Strike\\u2588End Date\": \"#999cff\",\n    \"Strike\\u2588Strike Industry\": \"#c887fb\",\n    \"Strike\\u2588Start Date\": \"#9cc9cc\",\n    \"Strike\\u2588Strike Outcome\": \"#ffeb80\",\n    \"Strike\\u2588Boycotted Institutions\": \"#ff8197\",\n    \"Strike\\u2588Strike Reason\": \"#f0d0ff\",\n    \"Strike\\u2588Strikers Status\": \"#00e1d9\",\n    \"Protest\\u2588Protest Slogan\": \"#7aecec\",\n    \"Protest\\u2588Location\": \"#bfeeb7\",\n    \"Protest\\u2588Casualties and Losses\": \"#feca74\",\n    \"Protest\\u2588Arrested\": \"#ff9561\",\n    \"Protest\\u2588Damaged Property\": \"#999cff\",\n    \"Protest\\u2588Date\": \"#c887fb\",\n    \"Protest\\u2588Method\": \"#9cc9cc\",\n    \"Protest\\u2588Government Reaction\": \"#ffeb80\",\n    \"Protest\\u2588Protest Reason\": \"#ff8197\",\n    \"Protest\\u2588Protesters\": \"#f0d0ff\",\n    \"Storm\\u2588Amount of Precipitation\": \"#7aecec\",\n    \"Storm\\u2588Storm Hit Time\": \"#bfeeb7\",\n    \"Storm\\u2588Storm Movement Speed\": \"#feca74\",\n    \"Storm\\u2588Storm Name\": \"#ff9561\",\n    \"Storm\\u2588People/Organization who predicted the disaster\": \"#999cff\",\n    \"Storm\\u2588Influence People\": \"#c887fb\",\n    \"Storm\\u2588Maximum Wind Speed\": \"#9cc9cc\",\n    \"Storm\\u2588Storm Formation Location\": \"#ffeb80\",\n    \"Storm\\u2588Storm Warning Level\": \"#ff8197\",\n    \"Storm\\u2588Storm Hit Location\": \"#f0d0ff\",\n    \"Storm\\u2588Storm Formation Time\": \"#00e1d9\",\n    \"Storm\\u2588Storm Center Location\": \"#e4e7d2\",\n    \"Storm\\u2588Storm Direction\": \"#33ffd4\",\n    \"Road Crash\\u2588Location\": \"#7aecec\",\n    \"Road Crash\\u2588Compensation\": \"#bfeeb7\",\n    \"Road Crash\\u2588Casualties and Losses\": \"#feca74\",\n    \"Road Crash\\u2588Economic loss\": \"#ff9561\",\n    \"Road Crash\\u2588Survivors\": \"#999cff\",\n    \"Road Crash\\u2588Date\": \"#c887fb\",\n    \"Road Crash\\u2588Cause\": \"#9cc9cc\",\n    \"Road Crash\\u2588Number of Vehicles Involved in the Crash\": \"#ffeb80\",\n    \"Road Crash\\u2588Accident Investigator\": \"#ff8197\",\n    \"Road Crash\\u2588Attending Hospital\": \"#f0d0ff\",\n    \"Bank Robbery\\u2588Investigating Spokesperson\": \"#7aecec\",\n    \"Bank Robbery\\u2588Location\": \"#bfeeb7\",\n    \"Bank Robbery\\u2588Arrested\": \"#feca74\",\n    \"Bank Robbery\\u2588Stolen Amount\": \"#ff9561\",\n    \"Bank Robbery\\u2588Date\": \"#999cff\",\n    \"Bank Robbery\\u2588Perpetrators\": \"#c887fb\",\n    \"Bank Robbery\\u2588Investigating agency\": \"#9cc9cc\",\n    \"Bank Robbery\\u2588Weapon Used\": \"#ffeb80\",\n    \"Bank Robbery\\u2588Hostage\": \"#ff8197\",\n    \"Bank Robbery\\u2588Bank Name\": \"#f0d0ff\",\n    \"Bank Robbery\\u2588Transportation\": \"#00e1d9\",\n    \"Bank Robbery\\u2588Recovered Amount\": \"#e4e7d2\",\n    \"Volcano Eruption\\u2588Fire Warning Level\": \"#7aecec\",\n    \"Volcano Eruption\\u2588The State of the Volcano (Dormant or Active)\": \"#bfeeb7\",\n    \"Volcano Eruption\\u2588Casualties and Losses\": \"#feca74\",\n    \"Volcano Eruption\\u2588Affected Areas\": \"#ff9561\",\n    \"Volcano Eruption\\u2588Cause\": \"#999cff\",\n    \"Volcano Eruption\\u2588People/Organization who predicted the disaster\": \"#c887fb\",\n    \"Volcano Eruption\\u2588Number of Damaged House\": \"#9cc9cc\",\n    \"Volcano Eruption\\u2588Economic Loss\": \"#ffeb80\",\n    \"Volcano Eruption\\u2588Number of Evacuated People\": \"#ff8197\",\n    \"Volcano Eruption\\u2588Last Outbreak Time\": \"#f0d0ff\",\n    \"Volcano Eruption\\u2588Refuge\": \"#00e1d9\",\n    \"Volcano Eruption\\u2588Outbreak Date\": \"#e4e7d2\",\n    \"Volcano Eruption\\u2588Volcano Name\": \"#33ffd4\",\n    \"CommitCrime - Sentence\\u2588Release Time\": \"#7aecec\",\n    \"CommitCrime - Sentence\\u2588Prison\": \"#bfeeb7\",\n    \"CommitCrime - Sentence\\u2588Prosecution Lawyer\": \"#feca74\",\n    \"CommitCrime - Sentence\\u2588The Sentence Claimed by the Defense Lawyer\": \"#ff9561\",\n    \"CommitCrime - Sentence\\u2588Suspect\": \"#999cff\",\n    \"CommitCrime - Sentence\\u2588Judge\": \"#c887fb\",\n    \"CommitCrime - Sentence\\u2588Detention Start Time\": \"#9cc9cc\",\n    \"CommitCrime - Sentence\\u2588Judgement Result/Prison Term\": \"#ffeb80\",\n    \"CommitCrime - Sentence\\u2588Court Time\": \"#ff8197\",\n    \"CommitCrime - Sentence\\u2588Victim\": \"#f0d0ff\",\n    \"CommitCrime - Sentence\\u2588Court\": \"#00e1d9\",\n    \"CommitCrime - Sentence\\u2588Accusation\": \"#e4e7d2\",\n    \"CommitCrime - Sentence\\u2588The Sentence Claimed by the Prosecutor's Lawyer\": \"#33ffd4\",\n    \"CommitCrime - Sentence\\u2588Defense Lawyer\": \"#99ff33\",\n    \"Famous Person - Give a Speech\\u2588Location\": \"#7aecec\",\n    \"Famous Person - Give a Speech\\u2588Ways to Watch the Speech\": \"#bfeeb7\",\n    \"Famous Person - Give a Speech\\u2588Speaker Status\": \"#feca74\",\n    \"Famous Person - Give a Speech\\u2588News Release Agency\": \"#ff9561\",\n    \"Famous Person - Give a Speech\\u2588Speaker\": \"#999cff\",\n    \"Famous Person - Give a Speech\\u2588Date\": \"#c887fb\",\n    \"Environment Pollution\\u2588Location\": \"#7aecec\",\n    \"Environment Pollution\\u2588Party Responsible for Pollution\": \"#bfeeb7\",\n    \"Environment Pollution\\u2588Cause\": \"#feca74\",\n    \"Environment Pollution\\u2588Pollution Source\": \"#ff9561\",\n    \"Environment Pollution\\u2588Anti-pollution People/Organizations\": \"#999cff\",\n    \"Environment Pollution\\u2588Solution\": \"#c887fb\",\n    \"Environment Pollution\\u2588Date\": \"#9cc9cc\",\n    \"Environment Pollution\\u2588Number of Victims\": \"#ffeb80\",\n    \"CommitCrime - Investigate\\u2588Head of Investigation Team\": \"#7aecec\",\n    \"CommitCrime - Investigate\\u2588Investigative Agency\": \"#bfeeb7\",\n    \"CommitCrime - Investigate\\u2588Person under Investigation\": \"#feca74\",\n    \"CommitCrime - Investigate\\u2588Date\": \"#ff9561\",\n    \"CommitCrime - Investigate\\u2588Cause\": \"#999cff\",\n    \"Diplomatic Visit\\u2588Country Visited\": \"#7aecec\",\n    \"Diplomatic Visit\\u2588Visitor\": \"#bfeeb7\",\n    \"Diplomatic Visit\\u2588Date\": \"#feca74\",\n    \"Diplomatic Visit\\u2588Host\": \"#ff9561\",\n    \"Financial Crisis\\u2588Unemployed Rate\": \"#7aecec\",\n    \"Financial Crisis\\u2588Start_Date\": \"#bfeeb7\",\n    \"Financial Crisis\\u2588Bankrupt Business\": \"#feca74\",\n    \"Financial Crisis\\u2588Affected Area\": \"#ff9561\",\n    \"Financial Crisis\\u2588Cause\": \"#999cff\",\n    \"Financial Crisis\\u2588Affected Industries\": \"#c887fb\",\n    \"Financial Crisis\\u2588Economists who Predicted the Crisis\": \"#9cc9cc\",\n    \"Financial Crisis\\u2588Economic Loss\": \"#ffeb80\",\n    \"Financial Crisis\\u2588Policy Proposals\": \"#ff8197\",\n    \"Financial Crisis\\u2588End_Date\": \"#f0d0ff\",\n    \"Appoint_Inauguration\\u2588Inauguration Time\": \"#7aecec\",\n    \"Appoint_Inauguration\\u2588Age of the Appointee\": \"#bfeeb7\",\n    \"Appoint_Inauguration\\u2588Predecessor\": \"#feca74\",\n    \"Appoint_Inauguration\\u2588Term of Office\": \"#ff9561\",\n    \"Appoint_Inauguration\\u2588Appointee\": \"#999cff\",\n    \"Appoint_Inauguration\\u2588Employment Agency\": \"#c887fb\",\n    \"Appoint_Inauguration\\u2588Last Job of the Appointee\": \"#9cc9cc\",\n    \"Appoint_Inauguration\\u2588Appointment Time\": \"#ffeb80\",\n    \"Appoint_Inauguration\\u2588Appointer\": \"#ff8197\",\n    \"Appoint_Inauguration\\u2588Position\": \"#f0d0ff\",\n    \"Disease Outbreaks\\u2588Suspected Cases\": \"#7aecec\",\n    \"Disease Outbreaks\\u2588Cured Rate\": \"#bfeeb7\",\n    \"Disease Outbreaks\\u2588Epidemic Data Issuing Agency\": \"#feca74\",\n    \"Disease Outbreaks\\u2588Symptoms\": \"#ff9561\",\n    \"Disease Outbreaks\\u2588Disease\": \"#999cff\",\n    \"Disease Outbreaks\\u2588Susceptible Population\": \"#c887fb\",\n    \"Disease Outbreaks\\u2588Date\": \"#9cc9cc\",\n    \"Disease Outbreaks\\u2588Cause\": \"#ffeb80\",\n    \"Disease Outbreaks\\u2588Death Cases\": \"#ff8197\",\n    \"Disease Outbreaks\\u2588Number of People Hospitalized\": \"#f0d0ff\",\n    \"Disease Outbreaks\\u2588Confirmed/Infected Cases\": \"#00e1d9\",\n    \"Disease Outbreaks\\u2588Special Medicine\": \"#e4e7d2\",\n    \"Disease Outbreaks\\u2588Death Rate\": \"#33ffd4\",\n    \"Disease Outbreaks\\u2588Way for Spreading\": \"#99ff33\",\n    \"Disease Outbreaks\\u2588Precautionary Measure\": \"#ff9933\",\n    \"Disease Outbreaks\\u2588Outbreak Location\": \"#ffff33\",\n    \"Disease Outbreaks\\u2588Areas affected\": \"#ccffff\",\n    \"Disease Outbreaks\\u2588Cured Cases\": \"#ff32ff\",\n    \"Disease Outbreaks\\u2588Complications\": \"#ffcc99\",\n    \"Disease Outbreaks\\u2588Number of Vaccinated People\": \"#66ffcc\",\n    \"Disease Outbreaks\\u2588Vaccine Research and Development Organization\": \"#ffff66\",\n    \"Mine Collapses\\u2588Location\": \"#7aecec\",\n    \"Mine Collapses\\u2588Compensation\": \"#bfeeb7\",\n    \"Mine Collapses\\u2588Casualties and Losses\": \"#feca74\",\n    \"Mine Collapses\\u2588Number of Trapped People\": \"#ff9561\",\n    \"Mine Collapses\\u2588Survivors\": \"#999cff\",\n    \"Mine Collapses\\u2588Date\": \"#c887fb\",\n    \"Mine Collapses\\u2588Cause\": \"#9cc9cc\",\n    \"Mine Collapses\\u2588Trapped Days\": \"#ffeb80\",\n    \"Mine Collapses\\u2588Accident Investigator\": \"#ff8197\",\n    \"Mine Collapses\\u2588Trapped Depth\": \"#f0d0ff\",\n    \"Mine Collapses\\u2588Economic Loss\": \"#00e1d9\",\n    \"Mine Collapses\\u2588Rescue Start Time\": \"#e4e7d2\",\n    \"Mine Collapses\\u2588Attending Hospital\": \"#33ffd4\",\n    \"Tear Up Agreement\\u2588The Agency Who Broke the Agreement\": \"#7aecec\",\n    \"Tear Up Agreement\\u2588Agreement Name\": \"#bfeeb7\",\n    \"Tear Up Agreement\\u2588Tear Up Reason\": \"#feca74\",\n    \"Tear Up Agreement\\u2588Agreement Members\": \"#ff9561\",\n    \"Tear Up Agreement\\u2588Date\": \"#999cff\",\n    \"Withdraw from an Orgnization\\u2588Exit Conditions\": \"#7aecec\",\n    \"Withdraw from an Orgnization\\u2588Withdraw Reason\": \"#bfeeb7\",\n    \"Withdraw from an Orgnization\\u2588Countries Withdrawing from the Organization\": \"#feca74\",\n    \"Withdraw from an Orgnization\\u2588Organization Leader\": \"#ff9561\",\n    \"Withdraw from an Orgnization\\u2588Declarer\": \"#999cff\",\n    \"Withdraw from an Orgnization\\u2588Organization Members\": \"#c887fb\",\n    \"Withdraw from an Orgnization\\u2588Effective Date\": \"#9cc9cc\",\n    \"Withdraw from an Orgnization\\u2588Annoncement Date\": \"#ffeb80\",\n    \"Withdraw from an Orgnization\\u2588Organization Name\": \"#ff8197\",\n    \"Organization Fine\\u2588Location\": \"#7aecec\",\n    \"Organization Fine\\u2588Penalty Amount\": \"#bfeeb7\",\n    \"Organization Fine\\u2588Lawyer\": \"#feca74\",\n    \"Organization Fine\\u2588Regulatory Authority\": \"#ff9561\",\n    \"Organization Fine\\u2588Fined Agency\": \"#999cff\",\n    \"Organization Fine\\u2588Fine Reason\": \"#c887fb\",\n    \"Organization Fine\\u2588Date\": \"#9cc9cc\",\n    \"Gas Explosion\\u2588Location\": \"#7aecec\",\n    \"Gas Explosion\\u2588Compensation\": \"#bfeeb7\",\n    \"Gas Explosion\\u2588Casualties and Losses\": \"#feca74\",\n    \"Gas Explosion\\u2588Economic loss\": \"#ff9561\",\n    \"Gas Explosion\\u2588Survivors\": \"#999cff\",\n    \"Gas Explosion\\u2588Date\": \"#c887fb\",\n    \"Gas Explosion\\u2588Cause\": \"#9cc9cc\",\n    \"Gas Explosion\\u2588Accident Investigator\": \"#ffeb80\",\n    \"Gas Explosion\\u2588Attending Hospital\": \"#ff8197\",\n    \"Organization Closed\\u2588Location\": \"#7aecec\",\n    \"Organization Closed\\u2588Organization\": \"#bfeeb7\",\n    \"Organization Closed\\u2588Head of the Institution\": \"#feca74\",\n    \"Organization Closed\\u2588Date\": \"#ff9561\",\n    \"Organization Closed\\u2588Cause\": \"#999cff\",\n    \"Famous Person - Death\\u2588Age\": \"#7aecec\",\n    \"Famous Person - Death\\u2588Deceased\": \"#bfeeb7\",\n    \"Famous Person - Death\\u2588Profession\": \"#feca74\",\n    \"Famous Person - Death\\u2588Death Reason\": \"#ff9561\",\n    \"Famous Person - Death\\u2588Date\": \"#999cff\",\n    \"Famous Person - Death\\u2588Perpetrator\": \"#c887fb\",\n    \"Famous Person - Death\\u2588Doctor\": \"#9cc9cc\",\n    \"Famous Person - Death\\u2588State Before Death\": \"#ffeb80\",\n    \"Famous Person - Death\\u2588Location/Hospital\": \"#ff8197\",\n    \"Famous Person - Recovered\\u2588Sequelae\": \"#7aecec\",\n    \"Famous Person - Recovered\\u2588Doctor and Medical Team\": \"#bfeeb7\",\n    \"Famous Person - Recovered\\u2588People\": \"#feca74\",\n    \"Famous Person - Recovered\\u2588Cost\": \"#ff9561\",\n    \"Famous Person - Recovered\\u2588Disease\": \"#999cff\",\n    \"Famous Person - Recovered\\u2588Treatment Method\": \"#c887fb\",\n    \"Famous Person - Recovered\\u2588Location/Hospital\": \"#9cc9cc\",\n    \"Famous Person - Recovered\\u2588Date\": \"#ffeb80\",\n    \"New Archeological Discoveries\\u2588Discover Location\": \"#7aecec\",\n    \"New Archeological Discoveries\\u2588Historical Sites\": \"#bfeeb7\",\n    \"New Archeological Discoveries\\u2588Archaeologist Organization\": \"#feca74\",\n    \"New Archeological Discoveries\\u2588Archaeologist\": \"#ff9561\",\n    \"New Archeological Discoveries\\u2588Artifacts and Their Chronology\": \"#999cff\",\n    \"New Archeological Discoveries\\u2588Discover Time\": \"#c887fb\",\n    \"New Archeological Discoveries\\u2588Reasons for the Formation of the Historical sites\": \"#9cc9cc\",\n    \"Sign Agreement\\u2588Agreement Name\": \"#7aecec\",\n    \"Sign Agreement\\u2588Location\": \"#bfeeb7\",\n    \"Sign Agreement\\u2588Agreement Content\": \"#feca74\",\n    \"Sign Agreement\\u2588Contracting Parties\": \"#ff9561\",\n    \"Sign Agreement\\u2588Date\": \"#999cff\",\n    \"Sign Agreement\\u2588Agreement Validity Period\": \"#c887fb\",\n    \"Awards Ceremony\\u2588Location\": \"#7aecec\",\n    \"Awards Ceremony\\u2588Award Field\": \"#bfeeb7\",\n    \"Awards Ceremony\\u2588Winner\": \"#feca74\",\n    \"Awards Ceremony\\u2588Host\": \"#ff9561\",\n    \"Awards Ceremony\\u2588Award Reason\": \"#999cff\",\n    \"Awards Ceremony\\u2588Award\": \"#c887fb\",\n    \"Awards Ceremony\\u2588Date\": \"#9cc9cc\",\n    \"Awards Ceremony\\u2588Employed Institution\": \"#ffeb80\",\n    \"Famous Person - Divorce\\u2588Marriage Duration\": \"#7aecec\",\n    \"Famous Person - Divorce\\u2588Child Custody\": \"#bfeeb7\",\n    \"Famous Person - Divorce\\u2588Wife\": \"#feca74\",\n    \"Famous Person - Divorce\\u2588Property Division\": \"#ff9561\",\n    \"Famous Person - Divorce\\u2588Date\": \"#999cff\",\n    \"Famous Person - Divorce\\u2588Cause\": \"#c887fb\",\n    \"Famous Person - Divorce\\u2588Child\": \"#9cc9cc\",\n    \"Famous Person - Divorce\\u2588Husband\": \"#ffeb80\",\n    \"Famous Person - Divorce\\u2588Announce Platform\": \"#ff8197\",\n    \"Riot\\u2588Location\": \"#7aecec\",\n    \"Riot\\u2588Belligerents\": \"#bfeeb7\",\n    \"Riot\\u2588Casualties and Losses\": \"#feca74\",\n    \"Riot\\u2588Weapon\": \"#ff9561\",\n    \"Riot\\u2588Economic Loss\": \"#999cff\",\n    \"Riot\\u2588Riot Reason\": \"#c887fb\",\n    \"Riot\\u2588Date\": \"#9cc9cc\",\n    \"Break Historical Records\\u2588Location\": \"#7aecec\",\n    \"Break Historical Records\\u2588The Grades of the Previous Record Holder\": \"#bfeeb7\",\n    \"Break Historical Records\\u2588Last Time the Record was Broken\": \"#feca74\",\n    \"Break Historical Records\\u2588Record Breaker\": \"#ff9561\",\n    \"Break Historical Records\\u2588Previous Record Holder\": \"#999cff\",\n    \"Break Historical Records\\u2588Grades\": \"#c887fb\",\n    \"Break Historical Records\\u2588Date\": \"#9cc9cc\",\n    \"Break Historical Records\\u2588Record-breaking Project\": \"#ffeb80\",\n    \"Mass Poisoning\\u2588Location\": \"#7aecec\",\n    \"Mass Poisoning\\u2588Compensation\": \"#bfeeb7\",\n    \"Mass Poisoning\\u2588Casualties and Losses\": \"#feca74\",\n    \"Mass Poisoning\\u2588Date\": \"#ff9561\",\n    \"Mass Poisoning\\u2588Cause\": \"#999cff\",\n    \"Mass Poisoning\\u2588Poisoning Type\": \"#c887fb\",\n    \"Mass Poisoning\\u2588Accident Investigator\": \"#9cc9cc\",\n    \"Mass Poisoning\\u2588Economic Loss\": \"#ffeb80\",\n    \"Mass Poisoning\\u2588Attending Hospital\": \"#ff8197\",\n    \"Insect Disaster\\u2588Aid Agency\": \"#7aecec\",\n    \"Insect Disaster\\u2588Affected Areas\": \"#bfeeb7\",\n    \"Insect Disaster\\u2588Date\": \"#feca74\",\n    \"Insect Disaster\\u2588Cause\": \"#ff9561\",\n    \"Insect Disaster\\u2588Response Measures\": \"#999cff\",\n    \"Insect Disaster\\u2588Economic Loss\": \"#c887fb\",\n    \"Insect Disaster\\u2588Influenced Crops and Livelihood\": \"#9cc9cc\",\n    \"Insect Disaster\\u2588Pests\": \"#ffeb80\",\n    \"Insect Disaster\\u2588Aid Supplies/Amount\": \"#ff8197\",\n    \"Famous Person - Sick\\u2588Illness\": \"#7aecec\",\n    \"Famous Person - Sick\\u2588Doctor and Medical Team\": \"#bfeeb7\",\n    \"Famous Person - Sick\\u2588People\": \"#feca74\",\n    \"Famous Person - Sick\\u2588Symptom\": \"#ff9561\",\n    \"Famous Person - Sick\\u2588Location/Hospital\": \"#999cff\",\n    \"Famous Person - Sick\\u2588Date\": \"#c887fb\",\n    \"Famous Person - Sick\\u2588Cause\": \"#9cc9cc\",\n    \"Government Policy Changes\\u2588Location\": \"#7aecec\",\n    \"Government Policy Changes\\u2588Deliberating Agency\": \"#bfeeb7\",\n    \"Government Policy Changes\\u2588Announcement Date\": \"#feca74\",\n    \"Government Policy Changes\\u2588Cause\": \"#ff9561\",\n    \"Government Policy Changes\\u2588Bill Drafting Agency\": \"#999cff\",\n    \"Government Policy Changes\\u2588Effective Date\": \"#c887fb\",\n    \"Government Policy Changes\\u2588Invalid Date\": \"#9cc9cc\",\n    \"Government Policy Changes\\u2588Policy Name & Abbreviation\": \"#ffeb80\",\n    \"Government Policy Changes\\u2588Policy Content\": \"#ff8197\",\n    \"Diplomatic Talks\\u2588Location\": \"#7aecec\",\n    \"Diplomatic Talks\\u2588Summit Theme\": \"#bfeeb7\",\n    \"Diplomatic Talks\\u2588Achievement\": \"#feca74\",\n    \"Diplomatic Talks\\u2588Summit Name\": \"#ff9561\",\n    \"Diplomatic Talks\\u2588Participants\": \"#999cff\",\n    \"Diplomatic Talks\\u2588Date\": \"#c887fb\",\n    \"CommitCrime - Accuse\\u2588Prosecutor\": \"#7aecec\",\n    \"CommitCrime - Accuse\\u2588Defense Lawyer\": \"#bfeeb7\",\n    \"CommitCrime - Accuse\\u2588Time of the Case\": \"#feca74\",\n    \"CommitCrime - Accuse\\u2588Prosecution Lawyer\": \"#ff9561\",\n    \"CommitCrime - Accuse\\u2588Accused People\": \"#999cff\",\n    \"CommitCrime - Accuse\\u2588Evidence\": \"#c887fb\",\n    \"CommitCrime - Accuse\\u2588Charged Crime\": \"#9cc9cc\",\n    \"CommitCrime - Accuse\\u2588Witness\": \"#ffeb80\",\n    \"Regime Change\\u2588Head of the Government\": \"#7aecec\",\n    \"Regime Change\\u2588Army\": \"#bfeeb7\",\n    \"Regime Change\\u2588Time for Dignitaries to Resign\": \"#feca74\",\n    \"Regime Change\\u2588Country\": \"#ff9561\",\n    \"Regime Change\\u2588Commanders of the Army\": \"#999cff\",\n    \"Regime Change\\u2588Provisional Government\": \"#c887fb\",\n    \"Regime Change\\u2588Date\": \"#9cc9cc\",\n    \"Resignation_Dismissal\\u2588Term of Office\": \"#7aecec\",\n    \"Resignation_Dismissal\\u2588Age of the Resignated Person\": \"#bfeeb7\",\n    \"Resignation_Dismissal\\u2588Employment Agency\": \"#feca74\",\n    \"Resignation_Dismissal\\u2588Date\": \"#ff9561\",\n    \"Resignation_Dismissal\\u2588Resign Reason\": \"#999cff\",\n    \"Resignation_Dismissal\\u2588Approver\": \"#c887fb\",\n    \"Resignation_Dismissal\\u2588Resignated Person\": \"#9cc9cc\",\n    \"Resignation_Dismissal\\u2588Successor\": \"#ffeb80\",\n    \"Resignation_Dismissal\\u2588Position\": \"#ff8197\",\n    \"Armed Conflict\\u2588Location\": \"#7aecec\",\n    \"Armed Conflict\\u2588Casualties and Losses\": \"#bfeeb7\",\n    \"Armed Conflict\\u2588End Time\": \"#feca74\",\n    \"Armed Conflict\\u2588Conflict Duration\": \"#ff9561\",\n    \"Armed Conflict\\u2588Target\": \"#999cff\",\n    \"Armed Conflict\\u2588Date\": \"#c887fb\",\n    \"Armed Conflict\\u2588Attacker\": \"#9cc9cc\",\n    \"Armed Conflict\\u2588Weapon and Equippment\": \"#ffeb80\",\n    \"Armed Conflict\\u2588Damaged Facility\": \"#ff8197\",\n    \"Armed Conflict\\u2588Military Strength\": \"#f0d0ff\",\n    \"Join in an Orgnization\\u2588Organization Leader\": \"#7aecec\",\n    \"Join in an Orgnization\\u2588Organization Name\": \"#bfeeb7\",\n    \"Join in an Orgnization\\u2588Declarer\": \"#feca74\",\n    \"Join in an Orgnization\\u2588Cause\": \"#ff9561\",\n    \"Join in an Orgnization\\u2588Organization Members\": \"#999cff\",\n    \"Join in an Orgnization\\u2588Effective Date\": \"#c887fb\",\n    \"Join in an Orgnization\\u2588Annoncement Date\": \"#9cc9cc\",\n    \"Join in an Orgnization\\u2588Countries Joined the Organization\": \"#ffeb80\",\n    \"Join in an Orgnization\\u2588Join Conditions\": \"#ff8197\",\n    \"CommitCrime - Arrest\\u2588Criminal Evidence\": \"#7aecec\",\n    \"CommitCrime - Arrest\\u2588Suspect\": \"#bfeeb7\",\n    \"CommitCrime - Arrest\\u2588The Charged Crime\": \"#feca74\",\n    \"CommitCrime - Arrest\\u2588Arrest Location\": \"#ff9561\",\n    \"CommitCrime - Arrest\\u2588Arrest Time\": \"#999cff\",\n    \"CommitCrime - Arrest\\u2588Police\": \"#c887fb\",\n    \"Organization Merge\\u2588Head of the Merged Organization\": \"#7aecec\",\n    \"Organization Merge\\u2588Acquirer\": \"#bfeeb7\",\n    \"Organization Merge\\u2588Acquiree\": \"#feca74\",\n    \"Organization Merge\\u2588Organization Industry\": \"#ff9561\",\n    \"Organization Merge\\u2588Acquisition amount\": \"#999cff\",\n    \"Organization Merge\\u2588Merger Terms\": \"#c887fb\",\n    \"Organization Merge\\u2588Date\": \"#9cc9cc\",\n    \"Financial Aid\\u2588Aid Reason\": \"#7aecec\",\n    \"Financial Aid\\u2588Location\": \"#bfeeb7\",\n    \"Financial Aid\\u2588Sponsor\": \"#feca74\",\n    \"Financial Aid\\u2588Beneficiary\": \"#ff9561\",\n    \"Financial Aid\\u2588Funding\": \"#999cff\",\n    \"Financial Aid\\u2588Date\": \"#c887fb\"\n  };\n  \n  const labelColor = `background-color: ${colors[label] || \"#ddd\"}`;\n  \n</script>\n\n<style>\n  @keyframes pulse {\n    0% {\n      opacity: .5;\n      transform: translate(-50%, -100%) scale(.5); \n    }\n    50%{\n    opacity: 1;\n    transform: translate(-50%, -100%) scale(1.2);\n    }\n    100% {\n      transform: translate(-50%, -100%) scale(1);\n    }\n  }\n  mark {\n    display: inline-block;\n    background-color: rgb(204, 192, 83);\n    padding: 0.3em 0.6em;\n    margin: 0 0.2em;\n    line-height: 1.0;\n    border-radius: 0.2em;\n    position: relative;\n  }\n\n  .tooltiptext {\n    visibility: hidden;\n    background-color: inherit;\n    text-decoration: none;\n    transform: translate(-50%, -100%) scale(.5); \n    position: absolute;\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    font-size: 1rem;\n    font-weight: 400;\n    text-align: center;\n    box-shadow: 0 0 4px 2px rgba(0,0,0,.2);\n    width: max-content;\n    max-width: 200px;\n    top:0;\n    left:50%;\n    margin-top: -18px;\n    visibility: hidden;\n    opacity: 0;\n  }\n\n  mark:hover {\n    position: relative;\n  }\n  \n  mark:hover .tooltiptext{\n    opacity: 1;\n    visibility: visible;\n    transform: translate(-50%, -100%) scale(1);\n    animation: pulse 1s;\n  }\n\n  mark:hover .tooltiptext::after{\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border: solid transparent;\n    content: '';\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n    border-top: 8px solid;\n    border-right: 8px solid transparent;\n    border-left: 8px solid transparent;\n    border-width: 10px;\n  }\n\n</style>\n\n<mark style={labelColor}>\n  {words}\n  <span class=\"tooltiptext\">{`${label.split(\"█\")[1]}`}</span>\n</mark>","<script lang=\"ts\">\n  import { Streamlit } from \"./streamlit\";\n  import type { RenderData } from \"./streamlit\";\n  import MarkedWord from \"./components/MarkedWord.svelte\";\n  import { onMount, afterUpdate, onDestroy } from \"svelte\"\n\n  let text: string = \"\";\n  let ents: {\n    start: number;\n    end: number;\n    label: string;\n  }[] = [];\n  export let header: string;\n  export let disabled: boolean;\n  \n  const onRender = (event: Event): void => {\n    const data = (event as CustomEvent<RenderData>).detail;\n    header = data.args[\"header\"];\n    text = data.args[\"text\"];\n    ents = data.args[\"ents\"];\n    \n  };\n\n  onMount(() => {\n    Streamlit.setComponentReady();\n    Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender);\n    Streamlit.setFrameHeight();\n  });\n\n  afterUpdate(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  onDestroy(() => {\n    Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, onRender);\n  });\n\n</script>\n\n<main {disabled}>\n  <h4>{header}</h4>\n  {#each ents as { start, end, label }, i (start)}\n    {#if i == 0}<span class={i}>{text.substring(0, start)}</span>{/if}\n    <MarkedWord\n      words={text.substring(start, end)}\n      {label}\n      id={i}\n    />\n    {#if i != ents.length - 1}\n      <span class={i+1}>{text.substring(end, ents[i + 1][\"start\"])}</span>\n    {/if}\n    {#if i == ents.length - 1}<span class={i+1}>{text.substring(end)}</span>{/if}\n  {:else}\n    {text}\n  {/each}\n</main>\n\n<style>\n  main {\n    padding: 1em;\n    line-height: 2;\n    font-family: \"Source Sans Pro\", sans-serif;\n  }\n</style>\n","import { WithStreamlitConnection } from \"./streamlit\";\nimport Annotator from \"./Annotator.svelte\";\n// \"WithStreamlitConnection\" is a wrapper component. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nconst docee_viewer = new WithStreamlitConnection({\n    target: document.body,\n    props: {\n        /**\n         * Custom Streamlit component\n         */\n        component: Annotator,\n        /**\n         * Set to false if you want `args` (the named dictionary of arguments passed\n         * from Python) to be passed as a dictionary to your component.\n         *\n         * Default is `true`.\n         */\n        spreadArgs: true,\n    },\n});\nexport default docee_viewer;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","type","detail","cancelable","callbacks","event","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","privateData","WeakMap","wrappers","pd","retv","get","console","assert","setCancelFlag","passiveListener","canceled","preventDefault","error","Event","eventTarget","set","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","prototype","wrapper","BaseEvent","CustomEvent","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","Boolean","composed","srcElement","cancelBubble","returnValue","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","listenerType","listener","next","prev","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","isArray","types","optionsIsObj","capture","undefined","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","flatbuffers","inRange","min","max","ToDictionary","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","decoderError","fatal","opt_code_point","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","TextDecoder$1","decode","input","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","cp","codePointsToString","TextEncoder$1","encode","opt_string","string","n","u","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","toString","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","ITERATOR_DONE","freeze","done","ArrowJSON","_json","schema","batches","dictionaries","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","super","_values","resolvers","_closedPromise","_closedPromiseResolve","closed","reason","return","_ensureOpen","_error","reject","Symbol","asyncIterator","streamAdapters","_","abort","close","_args","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isBoolean","isFunction","isPromise","isIterable","iterator","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isNumber","isFetchResponse","isReadableDOMStream","isReadableNodeStream","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","Math","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","Infinity","toArrayBufferView","ArrayBufferViewCtor","isView","toInt32Array","toBigInt64Array","toBigUint64Array","pump","toArrayBufferViewIterator","ArrayCtor","wrap","buffers","it","toUint8ArrayIterator","async","toArrayBufferViewAsyncIterator","emit","toUint8ArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","cmd","threw","bufferLength","isNaN","throw","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","events","onEvent","race","isFinite","evt","destroy","cleanup","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","AbstractVector","org","apache","arrow","flatbuf","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867.org","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_.org","BufferType","Message_.org","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","iterateBits","values","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","arr","cnt","pos","view","DataView","popcnt_uint32","getUint32","getUint16","getUint8","uint32","Visitor","args","visit","getVisitFn","throwIfNotFound","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","compareFields","fields","others","every","f","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","compareInterval","indices","dictionary","comparer","toStringTag","ArrayType","Null$1","Int_","Int8Array","Int16Array","Uint32Array","Binary$1","Utf8$1","Bool$1","Decimal$1","Date_","Time_","Timestamp_","Interval_","child","valueType","valueField","List$1","join","Struct$1","Union_","typeIdToChildIndex","idx","FixedSizeBinary$1","FixedSizeList$1","Map_","keyType","Map_$1","getId","atomicDictionaryId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","Function","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","reservedLength","reservedByteLength","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","numInvalid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","ArrayType64","_ArrayType64","buffer64","nulls","finished","_nulls","_isValid","queueingStrategy","highWaterMark","sizeProperty","numChunks","new","toVector","throughIterable","throughAsyncIterable","numChildren","_offsets","_typeIds","setValid","isValid","setValue","_setValue","valid","offsets","last","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","dictionaryHashFunction","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","bignumToString","bignumToBigInt","decimalToString","digits","base64","base32","checks","reverse","toJSON","valueOf","hint","TypedArray","BigIntArray","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","values64","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","memo","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","v","kr","vr","callbackfn","thisArg","str","defineProperties","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","desc","row","getter","setter","hasOwnProperty","Proxy","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","tmp","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","selectChunkArgs","flatten","VectorName","chunk","isDictionary","_indices","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","self","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","Column","_field","SingleChunkColumn","some","metadata","column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","res","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","entries","fieldIndex","valueIndex","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","bind","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_.org","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","numRecordBatches","rb","FileBlock","startDictionariesVector","numDictionaries","db","dictionaryBatchesOffset","finishFooterBuffer","getRecordBatch","getDictionaryBatch","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","write","sync","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","validity","buffersFromJSON","BufferRegion","fieldChildrenFromJSON","fromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_id","_isDelta","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","assembler","vectorChildren","assembleResult","RangeError","isNull","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writableStrategy","readableStrategy","writeAll","writeAllAsync","reset","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","Table","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","_writeMessage","assemble","metadata.RecordBatch","_writeDictionaries","_writeBodyBuffers","metadata.DictionaryBatch","padding","_writeDictionaryBatch","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","BaseVector","_bindDataAccessors","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","____","visitFields","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","fn.partial2","fn.partial0","partialType0","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","selectColumnArgs","numCols","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","oldToNew","newIdx","_f","_fs","fs","vs","batchData","ensureSameLengthData","_dictionaries","DictionaryCollector","collect","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAllSync","readAllAsync","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","pull","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","styles","rows","dataRows","dataColumns","columnTable","nanos","ComponentMessageType","Streamlit","levels","updates","to_null_out","accounted_for","$$scope","spread_props","create_if_block","addEventListener","removeEventListener","renderData","width","disabled","spreadArgs","onRenderEvent","RENDER_EVENT","setComponentReady","API_VERSION","registeredMessageListener","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","eventData","dispatchEvent","argsDataframe","argsDataframeArrow","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","t2_value","split","mark","span","t2","label","labelColor","Droughts█Areas Affected","Droughts█Influenced People","Droughts█Damaged Crops & Livestock","Droughts█Date","Droughts█Cause","Droughts█Production Cuts","Droughts█Related Rivers or Lakes","Droughts█Economic Loss","Droughts█The Worst-Hit Area","Tsunamis█Tsunamis","Tsunamis█Number of Rescued People","Tsunamis█Casualties and Losses","Tsunamis█Aid Agency","Tsunamis█Number of Destroyed Building","Tsunamis█Warning Device","Tsunamis█Date","Tsunamis█People/Organization who predicted the disaster","Tsunamis█Cause","Tsunamis█Magnitude(Tsunami heights)","Tsunamis█Area Affected","Tsunamis█Economic Loss","Tsunamis█Tsunami Warning Level","Tsunamis█Aid Supplies/Amount","New Wonders in Nature█Live Broadcast Platform","New Wonders in Nature█Spectacle Start Time","New Wonders in Nature█Best Way to Shoot","New Wonders in Nature█Spectacle Duration","New Wonders in Nature█Forecasting Agency","New Wonders in Nature█Cause","New Wonders in Nature█Spectacle End Time","New Wonders in Nature█Spectacle Location","New Wonders in Nature█Types of the Spectacle","Floods█Casualties and Losses","Floods█Number of Rescued People","Floods█Aid Agency","Floods█Maximum Rainfall","Floods█Affected Areas","Floods█Water Level","Floods█Date","Floods█Cause","Floods█Number of Damaged Houses","Floods█Missings","Floods█Number of Evacuated People","Floods█Related Rivers or Lakes","Floods█Temporary Settlement","Floods█Economic Loss","Floods█Disaster-Stricken Farmland","Floods█Aid Supplies/Amount","Air Crash█Location","Air Crash█Aircraft Agency","Air Crash█Casualties and Losses","Air Crash█Service Years","Air Crash█Scheduled Landing Place","Air Crash█Alternate Landing Place","Air Crash█Survivors","Air Crash█Taking-off Place","Air Crash█Flight No.","Air Crash█Date","Air Crash█Cause","Air Crash█Accident Investigator","Air Crash█Passengers","Air Crash█Crew","Organization Established█Location","Organization Established█Organization","Organization Established█Registered Capital","Organization Established█Head of Institution","Organization Established█Spokenmen","Organization Established█Date","Organization Established█Cause","Fire█Location","Fire█Number of Rescued People","Fire█Casualties and Losses","Fire█Aid Agency","Fire█Date","Fire█Cause","Fire█Magnitude","Fire█Temporary Settlement","Fire█Number of Damaged Houses","Fire█Economic Loss","Fire█Aid Supplies/Amount","Election█Location","Election█The Final Seats Result","Election█Candidates and their Political Parties","Election█Turnout(who win who lost)","Election█People Casting Key Votes","Election█Candidate Scandal(Allegations of fraud, etc.)","Election█Date","Election█The Final Votes and Percentages","Election█Electoral System","Election█Election Goal","Election█Voting method","Election█Election Name","CommitCrime - Release█Release Time","CommitCrime - Release█Charged Crime","CommitCrime - Release█Judge","CommitCrime - Release█Released People","CommitCrime - Release█Jail Time","CommitCrime - Release█Sentencing Location","CommitCrime - Release█Release Reason","CommitCrime - Release█Prison Term","CommitCrime - Release█Defense Lawyer","Earthquakes█Number of Rescued People","Earthquakes█Casualties and Losses","Earthquakes█Aid Agency","Earthquakes█Aid Supplies/Amount","Earthquakes█Number of Destroyed Building","Earthquakes█Epicenter","Earthquakes█Date","Earthquakes█Affected Area","Earthquakes█Magnitude","Earthquakes█Number of Aftershocks","Earthquakes█Number of Evacuated People","Earthquakes█Temporary Settlement","Earthquakes█Economic Loss","Earthquakes█Number of Trapped People","Earthquakes█Number of Rebuilding House","Military Excercise█Location","Military Excercise█Army","Military Excercise█Military Exercise","Military Excercise█Scale","Military Excercise█Date","Military Excercise█Projects","Military Excercise█Participating Countries","Military Excercise█Commanders and their Position","Military Excercise█Weapon and Equippment","Military Excercise█Goal","Famous Person - Marriage█Invited Person","Famous Person - Marriage█Wife","Famous Person - Marriage█Cost","Famous Person - Marriage█Date","Famous Person - Marriage█Wedding Venue","Famous Person - Marriage█Husband","Famous Person - Marriage█Wedding Dress Designer","Famous Person - Marriage█How Many Times Get Married","Famous Person - Marriage█Witness","Mudslides█Number of Rescued People","Mudslides█Casualties and Losses","Mudslides█Aid Agency","Mudslides█Affected Areas","Mudslides█Number of Destroyed Building","Mudslides█Influence People","Mudslides█Date","Mudslides█Cause","Mudslides█Missings","Mudslides█Number of Evacuated People","Mudslides█Temporary Settlement","Mudslides█Economic Loss","Mudslides█Aid Supplies/Amount","New Achievements in Aerospace█Launch Date","New Achievements in Aerospace█Launch Site","New Achievements in Aerospace█Spacecraft","New Achievements in Aerospace█Research Agency","New Achievements in Aerospace█Launch Country","New Achievements in Aerospace█Astronauts","New Achievements in Aerospace█Mission Duration","New Achievements in Aerospace█Cooperative Agency","New Achievements in Aerospace█Launch Result","New Achievements in Aerospace█Spokeswoman/Spokesman","New Achievements in Aerospace█Carrier Rocket","New Achievements in Aerospace█Spacecraft Mission","Shipwreck█Location","Shipwreck█Casualties and Losses","Shipwreck█Lost Contact Time","Shipwreck█Hull Discovery Time","Shipwreck█Survivors","Shipwreck█Date","Shipwreck█Shipwreck Reason","Shipwreck█Rescue Organizer","Shipwreck█Missings","Shipwreck█Accident Investigator","Shipwreck█Ship No.","Shipwreck█Rescue Tool or Method","Shipwreck█State of the Hull","Shipwreck█Rescue Start Time","Shipwreck█Hull Location","Shipwreck█Ship Agency","Train Collisions█Location","Train Collisions█Train Agency","Train Collisions█Casualties and Losses","Train Collisions█Survivors","Train Collisions█Date","Train Collisions█Cause","Train Collisions█Economic Loss","Train Collisions█Missings","Train Collisions█Accident Investigator","Train Collisions█Train No.","Train Collisions█Attending Hospital","Famine█Aid Agency","Famine█Affected Areas","Famine█Casualities and Losses","Famine█Date","Famine█Cause","Famine█Number of Influenced People","Famine█Economic Loss","Famine█Solution","Famine█Aid Supplies/Amount","Sports Competition█Location","Sports Competition█MVP","Sports Competition█Champions","Sports Competition█End Time","Sports Competition█Postpone Reason","Sports Competition█Postpone Time","Sports Competition█Lasting Time","Sports Competition█Score","Sports Competition█Contest Participant","Sports Competition█Start Time","Sports Competition█Game Name","Sports Competition█Host Country","Sports Competition█Competition Items","Strike█Economy Loss","Strike█Duration","Strike█Strike Agency","Strike█Strikers","Strike█End Date","Strike█Strike Industry","Strike█Start Date","Strike█Strike Outcome","Strike█Boycotted Institutions","Strike█Strike Reason","Strike█Strikers Status","Protest█Protest Slogan","Protest█Location","Protest█Casualties and Losses","Protest█Arrested","Protest█Damaged Property","Protest█Date","Protest█Method","Protest█Government Reaction","Protest█Protest Reason","Protest█Protesters","Storm█Amount of Precipitation","Storm█Storm Hit Time","Storm█Storm Movement Speed","Storm█Storm Name","Storm█People/Organization who predicted the disaster","Storm█Influence People","Storm█Maximum Wind Speed","Storm█Storm Formation Location","Storm█Storm Warning Level","Storm█Storm Hit Location","Storm█Storm Formation Time","Storm█Storm Center Location","Storm█Storm Direction","Road Crash█Location","Road Crash█Compensation","Road Crash█Casualties and Losses","Road Crash█Economic loss","Road Crash█Survivors","Road Crash█Date","Road Crash█Cause","Road Crash█Number of Vehicles Involved in the Crash","Road Crash█Accident Investigator","Road Crash█Attending Hospital","Bank Robbery█Investigating Spokesperson","Bank Robbery█Location","Bank Robbery█Arrested","Bank Robbery█Stolen Amount","Bank Robbery█Date","Bank Robbery█Perpetrators","Bank Robbery█Investigating agency","Bank Robbery█Weapon Used","Bank Robbery█Hostage","Bank Robbery█Bank Name","Bank Robbery█Transportation","Bank Robbery█Recovered Amount","Volcano Eruption█Fire Warning Level","Volcano Eruption█The State of the Volcano (Dormant or Active)","Volcano Eruption█Casualties and Losses","Volcano Eruption█Affected Areas","Volcano Eruption█Cause","Volcano Eruption█People/Organization who predicted the disaster","Volcano Eruption█Number of Damaged House","Volcano Eruption█Economic Loss","Volcano Eruption█Number of Evacuated People","Volcano Eruption█Last Outbreak Time","Volcano Eruption█Refuge","Volcano Eruption█Outbreak Date","Volcano Eruption█Volcano Name","CommitCrime - Sentence█Release Time","CommitCrime - Sentence█Prison","CommitCrime - Sentence█Prosecution Lawyer","CommitCrime - Sentence█The Sentence Claimed by the Defense Lawyer","CommitCrime - Sentence█Suspect","CommitCrime - Sentence█Judge","CommitCrime - Sentence█Detention Start Time","CommitCrime - Sentence█Judgement Result/Prison Term","CommitCrime - Sentence█Court Time","CommitCrime - Sentence█Victim","CommitCrime - Sentence█Court","CommitCrime - Sentence█Accusation","CommitCrime - Sentence█The Sentence Claimed by the Prosecutor's Lawyer","CommitCrime - Sentence█Defense Lawyer","Famous Person - Give a Speech█Location","Famous Person - Give a Speech█Ways to Watch the Speech","Famous Person - Give a Speech█Speaker Status","Famous Person - Give a Speech█News Release Agency","Famous Person - Give a Speech█Speaker","Famous Person - Give a Speech█Date","Environment Pollution█Location","Environment Pollution█Party Responsible for Pollution","Environment Pollution█Cause","Environment Pollution█Pollution Source","Environment Pollution█Anti-pollution People/Organizations","Environment Pollution█Solution","Environment Pollution█Date","Environment Pollution█Number of Victims","CommitCrime - Investigate█Head of Investigation Team","CommitCrime - Investigate█Investigative Agency","CommitCrime - Investigate█Person under Investigation","CommitCrime - Investigate█Date","CommitCrime - Investigate█Cause","Diplomatic Visit█Country Visited","Diplomatic Visit█Visitor","Diplomatic Visit█Date","Diplomatic Visit█Host","Financial Crisis█Unemployed Rate","Financial Crisis█Start_Date","Financial Crisis█Bankrupt Business","Financial Crisis█Affected Area","Financial Crisis█Cause","Financial Crisis█Affected Industries","Financial Crisis█Economists who Predicted the Crisis","Financial Crisis█Economic Loss","Financial Crisis█Policy Proposals","Financial Crisis█End_Date","Appoint_Inauguration█Inauguration Time","Appoint_Inauguration█Age of the Appointee","Appoint_Inauguration█Predecessor","Appoint_Inauguration█Term of Office","Appoint_Inauguration█Appointee","Appoint_Inauguration█Employment Agency","Appoint_Inauguration█Last Job of the Appointee","Appoint_Inauguration█Appointment Time","Appoint_Inauguration█Appointer","Appoint_Inauguration█Position","Disease Outbreaks█Suspected Cases","Disease Outbreaks█Cured Rate","Disease Outbreaks█Epidemic Data Issuing Agency","Disease Outbreaks█Symptoms","Disease Outbreaks█Disease","Disease Outbreaks█Susceptible Population","Disease Outbreaks█Date","Disease Outbreaks█Cause","Disease Outbreaks█Death Cases","Disease Outbreaks█Number of People Hospitalized","Disease Outbreaks█Confirmed/Infected Cases","Disease Outbreaks█Special Medicine","Disease Outbreaks█Death Rate","Disease Outbreaks█Way for Spreading","Disease Outbreaks█Precautionary Measure","Disease Outbreaks█Outbreak Location","Disease Outbreaks█Areas affected","Disease Outbreaks█Cured Cases","Disease Outbreaks█Complications","Disease Outbreaks█Number of Vaccinated People","Disease Outbreaks█Vaccine Research and Development Organization","Mine Collapses█Location","Mine Collapses█Compensation","Mine Collapses█Casualties and Losses","Mine Collapses█Number of Trapped People","Mine Collapses█Survivors","Mine Collapses█Date","Mine Collapses█Cause","Mine Collapses█Trapped Days","Mine Collapses█Accident Investigator","Mine Collapses█Trapped Depth","Mine Collapses█Economic Loss","Mine Collapses█Rescue Start Time","Mine Collapses█Attending Hospital","Tear Up Agreement█The Agency Who Broke the Agreement","Tear Up Agreement█Agreement Name","Tear Up Agreement█Tear Up Reason","Tear Up Agreement█Agreement Members","Tear Up Agreement█Date","Withdraw from an Orgnization█Exit Conditions","Withdraw from an Orgnization█Withdraw Reason","Withdraw from an Orgnization█Countries Withdrawing from the Organization","Withdraw from an Orgnization█Organization Leader","Withdraw from an Orgnization█Declarer","Withdraw from an Orgnization█Organization Members","Withdraw from an Orgnization█Effective Date","Withdraw from an Orgnization█Annoncement Date","Withdraw from an Orgnization█Organization Name","Organization Fine█Location","Organization Fine█Penalty Amount","Organization Fine█Lawyer","Organization Fine█Regulatory Authority","Organization Fine█Fined Agency","Organization Fine█Fine Reason","Organization Fine█Date","Gas Explosion█Location","Gas Explosion█Compensation","Gas Explosion█Casualties and Losses","Gas Explosion█Economic loss","Gas Explosion█Survivors","Gas Explosion█Date","Gas Explosion█Cause","Gas Explosion█Accident Investigator","Gas Explosion█Attending Hospital","Organization Closed█Location","Organization Closed█Organization","Organization Closed█Head of the Institution","Organization Closed█Date","Organization Closed█Cause","Famous Person - Death█Age","Famous Person - Death█Deceased","Famous Person - Death█Profession","Famous Person - Death█Death Reason","Famous Person - Death█Date","Famous Person - Death█Perpetrator","Famous Person - Death█Doctor","Famous Person - Death█State Before Death","Famous Person - Death█Location/Hospital","Famous Person - Recovered█Sequelae","Famous Person - Recovered█Doctor and Medical Team","Famous Person - Recovered█People","Famous Person - Recovered█Cost","Famous Person - Recovered█Disease","Famous Person - Recovered█Treatment Method","Famous Person - Recovered█Location/Hospital","Famous Person - Recovered█Date","New Archeological Discoveries█Discover Location","New Archeological Discoveries█Historical Sites","New Archeological Discoveries█Archaeologist Organization","New Archeological Discoveries█Archaeologist","New Archeological Discoveries█Artifacts and Their Chronology","New Archeological Discoveries█Discover Time","New Archeological Discoveries█Reasons for the Formation of the Historical sites","Sign Agreement█Agreement Name","Sign Agreement█Location","Sign Agreement█Agreement Content","Sign Agreement█Contracting Parties","Sign Agreement█Date","Sign Agreement█Agreement Validity Period","Awards Ceremony█Location","Awards Ceremony█Award Field","Awards Ceremony█Winner","Awards Ceremony█Host","Awards Ceremony█Award Reason","Awards Ceremony█Award","Awards Ceremony█Date","Awards Ceremony█Employed Institution","Famous Person - Divorce█Marriage Duration","Famous Person - Divorce█Child Custody","Famous Person - Divorce█Wife","Famous Person - Divorce█Property Division","Famous Person - Divorce█Date","Famous Person - Divorce█Cause","Famous Person - Divorce█Child","Famous Person - Divorce█Husband","Famous Person - Divorce█Announce Platform","Riot█Location","Riot█Belligerents","Riot█Casualties and Losses","Riot█Weapon","Riot█Economic Loss","Riot█Riot Reason","Riot█Date","Break Historical Records█Location","Break Historical Records█The Grades of the Previous Record Holder","Break Historical Records█Last Time the Record was Broken","Break Historical Records█Record Breaker","Break Historical Records█Previous Record Holder","Break Historical Records█Grades","Break Historical Records█Date","Break Historical Records█Record-breaking Project","Mass Poisoning█Location","Mass Poisoning█Compensation","Mass Poisoning█Casualties and Losses","Mass Poisoning█Date","Mass Poisoning█Cause","Mass Poisoning█Poisoning Type","Mass Poisoning█Accident Investigator","Mass Poisoning█Economic Loss","Mass Poisoning█Attending Hospital","Insect Disaster█Aid Agency","Insect Disaster█Affected Areas","Insect Disaster█Date","Insect Disaster█Cause","Insect Disaster█Response Measures","Insect Disaster█Economic Loss","Insect Disaster█Influenced Crops and Livelihood","Insect Disaster█Pests","Insect Disaster█Aid Supplies/Amount","Famous Person - Sick█Illness","Famous Person - Sick█Doctor and Medical Team","Famous Person - Sick█People","Famous Person - Sick█Symptom","Famous Person - Sick█Location/Hospital","Famous Person - Sick█Date","Famous Person - Sick█Cause","Government Policy Changes█Location","Government Policy Changes█Deliberating Agency","Government Policy Changes█Announcement Date","Government Policy Changes█Cause","Government Policy Changes█Bill Drafting Agency","Government Policy Changes█Effective Date","Government Policy Changes█Invalid Date","Government Policy Changes█Policy Name & Abbreviation","Government Policy Changes█Policy Content","Diplomatic Talks█Location","Diplomatic Talks█Summit Theme","Diplomatic Talks█Achievement","Diplomatic Talks█Summit Name","Diplomatic Talks█Participants","Diplomatic Talks█Date","CommitCrime - Accuse█Prosecutor","CommitCrime - Accuse█Defense Lawyer","CommitCrime - Accuse█Time of the Case","CommitCrime - Accuse█Prosecution Lawyer","CommitCrime - Accuse█Accused People","CommitCrime - Accuse█Evidence","CommitCrime - Accuse█Charged Crime","CommitCrime - Accuse█Witness","Regime Change█Head of the Government","Regime Change█Army","Regime Change█Time for Dignitaries to Resign","Regime Change█Country","Regime Change█Commanders of the Army","Regime Change█Provisional Government","Regime Change█Date","Resignation_Dismissal█Term of Office","Resignation_Dismissal█Age of the Resignated Person","Resignation_Dismissal█Employment Agency","Resignation_Dismissal█Date","Resignation_Dismissal█Resign Reason","Resignation_Dismissal█Approver","Resignation_Dismissal█Resignated Person","Resignation_Dismissal█Successor","Resignation_Dismissal█Position","Armed Conflict█Location","Armed Conflict█Casualties and Losses","Armed Conflict█End Time","Armed Conflict█Conflict Duration","Armed Conflict█Target","Armed Conflict█Date","Armed Conflict█Attacker","Armed Conflict█Weapon and Equippment","Armed Conflict█Damaged Facility","Armed Conflict█Military Strength","Join in an Orgnization█Organization Leader","Join in an Orgnization█Organization Name","Join in an Orgnization█Declarer","Join in an Orgnization█Cause","Join in an Orgnization█Organization Members","Join in an Orgnization█Effective Date","Join in an Orgnization█Annoncement Date","Join in an Orgnization█Countries Joined the Organization","Join in an Orgnization█Join Conditions","CommitCrime - Arrest█Criminal Evidence","CommitCrime - Arrest█Suspect","CommitCrime - Arrest█The Charged Crime","CommitCrime - Arrest█Arrest Location","CommitCrime - Arrest█Arrest Time","CommitCrime - Arrest█Police","Organization Merge█Head of the Merged Organization","Organization Merge█Acquirer","Organization Merge█Acquiree","Organization Merge█Organization Industry","Organization Merge█Acquisition amount","Organization Merge█Merger Terms","Organization Merge█Date","Financial Aid█Aid Reason","Financial Aid█Location","Financial Aid█Sponsor","Financial Aid█Beneficiary","Financial Aid█Funding","Financial Aid█Date","t_value","substring","span_class_value","if_block0","create_if_block_2","if_block1","create_if_block_1","if_block2","markedword_changes","main","h4","old_blocks","get_key","dynamic","list","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","each_1_else","ents","onRender","$$invalidate"],"mappings":"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"}